[{"C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\index.js":"1","C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\App.js":"2","C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\components\\Blog.js":"3","C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\services\\blogs.js":"4","C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\services\\login.js":"5","C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\components\\Notification.js":"6","C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\components\\LoginForm.js":"7","C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\components\\Togglable.js":"8","C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\components\\BlogForm.js":"9","C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\index.js":"10","C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\App.js":"11","C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\services\\login.js":"12","C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\services\\blogs.js":"13","C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\components\\Blog.js":"14","C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\components\\Notification.js":"15","C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\components\\Togglable.js":"16","C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\components\\LoginForm.js":"17","C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\components\\BlogForm.js":"18"},{"size":180,"mtime":1678929882523,"results":"19","hashOfConfig":"20"},{"size":5369,"mtime":1679009805300,"results":"21","hashOfConfig":"20"},{"size":2131,"mtime":1679079934039,"results":"22","hashOfConfig":"20"},{"size":930,"mtime":1678923698752,"results":"23","hashOfConfig":"20"},{"size":201,"mtime":1678923479310,"results":"24","hashOfConfig":"20"},{"size":789,"mtime":1678998809340,"results":"25","hashOfConfig":"20"},{"size":872,"mtime":1678997472621,"results":"26","hashOfConfig":"20"},{"size":811,"mtime":1678923683254,"results":"27","hashOfConfig":"20"},{"size":1867,"mtime":1678997991771,"results":"28","hashOfConfig":"20"},{"size":180,"mtime":1678929882523,"results":"29","hashOfConfig":"30"},{"size":5411,"mtime":1679592786758,"results":"31","hashOfConfig":"30"},{"size":201,"mtime":1678923479310,"results":"32","hashOfConfig":"30"},{"size":930,"mtime":1678923698752,"results":"33","hashOfConfig":"30"},{"size":2131,"mtime":1679079934039,"results":"34","hashOfConfig":"30"},{"size":789,"mtime":1678998809340,"results":"35","hashOfConfig":"30"},{"size":811,"mtime":1678923683254,"results":"36","hashOfConfig":"30"},{"size":872,"mtime":1678997472621,"results":"37","hashOfConfig":"30"},{"size":1867,"mtime":1678997991771,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tvf1u6",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mtr9s0",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\index.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\App.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\components\\Blog.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\services\\blogs.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\services\\login.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\components\\Notification.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\components\\LoginForm.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\components\\Togglable.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\react_course_part5_bloglist\\src\\components\\BlogForm.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\index.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\App.js",["94"],[],"import { useState, useEffect, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\nimport './App.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  //const [newBlog, setNewBlog] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [updatedBlog, setUpdatedBlog] = useState('')\n\n  const [errorMessage, setErrorMessage] = useState(null)\n  //const [loginVisible, setLoginVisible] = useState(false)\n\n  const blogFormRef= useRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [updatedBlog])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    //console.log(loggedUserJSON, 'is logged user')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      //console.log(user, 'is user in useeffect')\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  //console.log(user, 'is user outside of useeffect')\n  //console.log(loggedUserJSON, 'is logged user')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({ username, password })\n\n      window.localStorage.setItem( 'loggedBlogAppUser', JSON.stringify(user) )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Error: Wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)}, 5000)\n    }\n  }\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisib()\n    try{\n      blogService\n        .create(blogObject)\n        .then((returnedBlog) => {\n          console.log(returnedBlog, 'is the obj that is returned blog')\n          setBlogs(blogs.concat(returnedBlog))\n        })\n\n      setErrorMessage(`The blog post \"${blogObject.title}\" by ${blogObject.author} has been added`)\n      setTimeout(() => {\n        setErrorMessage(null)}, 5000)\n      setUpdatedBlog(2000)\n    } catch(exception) {\n      setErrorMessage('There was an error when submitting the blog\\'s information. Please try again.')\n    }\n  }\n\n  const increaseLikes = async (id) => {\n\n    const blog = blogs.find((diary) => diary.id === id)\n    console.log(blog, 'is blog')\n    console.log(blog.id, 'is blog id')\n    //console.log(blog.user, 'is blog user')\n    //console.log(blog.user.id, 'is blog user id')\n    console.log(blog.likes, 'is blog likes before update')\n\n    const updatedBlogInfo = {\n      likes: blog.likes+1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    }\n\n    setUpdatedBlog(updatedBlogInfo.likes)\n    //console.log(updatedBlogInfo, 'is updated blog info')\n    await blogService.update(blog.id, updatedBlogInfo)\n  }\n\n  const deleteBlog = async (id) => {\n\n    const blog = blogs.find((book) => book.id === id)\n    const agree = window.confirm(`Are you sure you want to delete ${blog.title}?`)\n    if (agree) {\n      await blogService.deleteEntry(blog.id)\n      console.log('we deleted the blog inside of deleteblog in app')\n      setUpdatedBlog(1)\n    }\n  }\n\n  const loginForm = () => {\n    return (\n      <Togglable buttonLabel='login'>\n        <LoginForm\n          username={username}\n          password={password}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          handleSubmit={handleLogin}\n        />\n      </Togglable>\n    )\n  }\n\n  const logOut = () => {\n    try {\n      window.localStorage.removeItem('loggedBlogAppUser')\n      if (!(window.localStorage.getItem('loggedBlogAppUser'))) {\n        window.location.reload(true)\n      }\n    } catch (exception) {\n      console.log('we have an error')\n    }\n  }\n\n  const mappedBlogs = blogs.map(blog => <Blog key={blog.id} blog={blog} userInfo={user} increaseLikes={() => increaseLikes(blog.id)} deleteEntry={() => deleteBlog(blog.id)}/>)\n  mappedBlogs.sort((a,b) => b.props.blog.likes-a.props.blog.likes)\n  //console.log(mappedBlogs)\n  //console.log(mappedBlogs[0], 'is mapped blogs zero')\n  //console.log(mappedBlogs[0].props, 'is mapped blogs zero props')\n  //console.log(mappedBlogs[0].props.blog, 'is mapped blogs zero props blog')\n  //console.log(mappedBlogs[0].props.blog.likes, 'is mapped blogs zero props blog likes')\n\n  //console.log(blogs, 'is blogs')\n  //const sorted = [...blogs].sort((a,b) => a - b)\n  //console.log(sorted, 'is sorted')\n  //const sortVal = Object.values(blogs)\n  //console.log(sortVal, 'is sort val')\n\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <Notification message ={errorMessage}/>\n      {!user && loginForm()}\n      {user && <div>\n        <p>{user.personName} is logged in</p>\n        <button onClick={logOut}>logout</button>\n        <Togglable buttonLabel=\"New Blog\" ref={blogFormRef}>\n          <BlogForm createBlog={addBlog}/>\n        </Togglable>\n        <h2>Blog List</h2>\n        {mappedBlogs}\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default App","C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\services\\login.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\services\\blogs.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\components\\Blog.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\components\\Notification.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\components\\Togglable.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\components\\LoginForm.js",[],[],"C:\\Users\\bilstr\\Documents\\GitHub\\part7\\extended-bloglist\\src\\components\\BlogForm.js",[],[],{"ruleId":"95","severity":2,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":21},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar"]