{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm';\nimport Togglable from './components/Togglable';\nimport BlogForm from './components/BlogForm';\nimport BlogsList from './components/BlogsList';\nimport { initializeBlogs, newBlogs } from './reducers/blogReducer';\nimport { setNotif } from './reducers/notifReducer';\nimport { userData, userToken } from './reducers/userReducer';\n//import {\n//  BrowserRouter as Router,\n//  Routes, Route, Link, useParams,\n//  useNavigate\n//} from 'react-router-dom'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"popo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Users;\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const blogFormRef = useRef();\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n  useEffect(() => {\n    //here is where we do login stuff\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n    //console.log(loggedUserJSON, 'is logged user')\n    if (loggedUserJSON) {\n      const usered = JSON.parse(loggedUserJSON);\n      dispatch(userData(usered));\n      //console.log(user, 'is user in useeffect')\n      dispatch(userToken(usered));\n    }\n  }, []);\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const usering = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(usering));\n      dispatch(userData(usering));\n      dispatch(userToken(user));\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(setNotif('Error: Wrong username or password', 5));\n    }\n  };\n  const addBlog = blogObject => {\n    blogFormRef.current.toggleVisib();\n    dispatch(newBlogs(blogObject));\n    dispatch(setNotif(`The blog post \"${blogObject.title}\" by ${blogObject.author} has been added`, 5));\n  };\n  const loginForm = () => {\n    return /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"login\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username,\n        password: password,\n        handleUsernameChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        },\n        handlePasswordChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        },\n        handleSubmit: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  };\n  const logOut = () => {\n    try {\n      window.localStorage.removeItem('loggedBlogAppUser');\n      if (!window.localStorage.getItem('loggedBlogAppUser')) {\n        window.location.reload(true);\n      }\n    } catch (exception) {\n      console.log('we have an error');\n    }\n  };\n\n  //mappedBlogs.sort((a,b) => b.props.blog.likes-a.props.blog.likes)\n  //console.log(mappedBlogs)\n  //console.log(mappedBlogs[0], 'is mapped blogs zero')\n  //console.log(mappedBlogs[0].props, 'is mapped blogs zero props')\n  //console.log(mappedBlogs[0].props.blog, 'is mapped blogs zero props blog')\n  //console.log(mappedBlogs[0].props.blog.likes, 'is mapped blogs zero props blog likes')\n\n  //console.log(blogs, 'is blogs')\n  //const sorted = [...blogs].sort((a,b) => a - b)\n  //console.log(sorted, 'is sorted')\n  //const sortVal = Object.values(blogs)\n  //console.log(sortVal, 'is sort val')\n\n  const user = useSelector(state => state.userInfo);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users\",\n          element: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/blogs\",\n          element: BlogsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), !user && loginForm(), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.personName, \" is logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logOut,\n          children: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n          buttonLabel: \"New Blog\",\n          ref: blogFormRef,\n          children: /*#__PURE__*/_jsxDEV(BlogForm, {\n            createBlog: addBlog\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Blog List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BlogsList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7AxEMruiwAqzyG4MtB+loYP22uI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Users\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","useSelector","useDispatch","loginService","Notification","LoginForm","Togglable","BlogForm","BlogsList","initializeBlogs","newBlogs","setNotif","userData","userToken","BrowserRouter","Router","Routes","Route","Users","App","username","setUsername","password","setPassword","dispatch","blogFormRef","loggedUserJSON","window","localStorage","getItem","usered","JSON","parse","handleLogin","event","preventDefault","usering","login","setItem","stringify","user","exception","addBlog","blogObject","current","toggleVisib","title","author","loginForm","target","value","logOut","removeItem","location","reload","console","log","state","userInfo","personName"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\nimport BlogsList from './components/BlogsList'\nimport { initializeBlogs, newBlogs } from './reducers/blogReducer'\nimport { setNotif } from './reducers/notifReducer'\nimport { userData, userToken } from './reducers/userReducer'\n//import {\n//  BrowserRouter as Router,\n//  Routes, Route, Link, useParams,\n//  useNavigate\n//} from 'react-router-dom'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\n\nconst Users = () => {\n  return(\n    <p>popo</p>\n  )\n}\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n  const blogFormRef= useRef()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    //here is where we do login stuff\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    //console.log(loggedUserJSON, 'is logged user')\n    if (loggedUserJSON) {\n      const usered = JSON.parse(loggedUserJSON)\n      dispatch(userData(usered))\n      //console.log(user, 'is user in useeffect')\n      dispatch(userToken(usered))\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const usering = await loginService.login({ username, password })\n      window.localStorage.setItem( 'loggedBlogAppUser', JSON.stringify(usering) )\n      dispatch(userData(usering))\n      dispatch(userToken(user))\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      dispatch(setNotif('Error: Wrong username or password', 5))\n    }\n  }\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisib()\n    dispatch(newBlogs(blogObject))\n    dispatch(setNotif(`The blog post \"${blogObject.title}\" by ${blogObject.author} has been added`, 5))\n  }\n\n\n  const loginForm = () => {\n    return (\n      <Togglable buttonLabel='login'>\n        <LoginForm\n          username={username}\n          password={password}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          handleSubmit={handleLogin}\n        />\n      </Togglable>\n    )\n  }\n\n  const logOut = () => {\n    try {\n      window.localStorage.removeItem('loggedBlogAppUser')\n      if (!(window.localStorage.getItem('loggedBlogAppUser'))) {\n        window.location.reload(true)\n      }\n    } catch (exception) {\n      console.log('we have an error')\n    }\n  }\n\n  //mappedBlogs.sort((a,b) => b.props.blog.likes-a.props.blog.likes)\n  //console.log(mappedBlogs)\n  //console.log(mappedBlogs[0], 'is mapped blogs zero')\n  //console.log(mappedBlogs[0].props, 'is mapped blogs zero props')\n  //console.log(mappedBlogs[0].props.blog, 'is mapped blogs zero props blog')\n  //console.log(mappedBlogs[0].props.blog.likes, 'is mapped blogs zero props blog likes')\n\n  //console.log(blogs, 'is blogs')\n  //const sorted = [...blogs].sort((a,b) => a - b)\n  //console.log(sorted, 'is sorted')\n  //const sortVal = Object.values(blogs)\n  //console.log(sortVal, 'is sort val')\n\n  const user = useSelector(state => state.userInfo)\n\n\n  return (\n    <Router>\n      <div>\n        <h2>Blogs</h2>\n        <Notification />\n\n        <Routes>\n          <Route path=\"/users\" element={<Users />} />\n          <Route path=\"/blogs\" element={BlogsList} />\n        </Routes>\n\n\n        {!user && loginForm()}\n        {user && <div>\n          <p>{user.personName} is logged in</p>\n          <button onClick={logOut}>logout</button>\n          <Togglable buttonLabel=\"New Blog\" ref={blogFormRef}>\n            <BlogForm createBlog={addBlog}/>\n          </Togglable>\n          <h2>Blog List</h2>\n          <BlogsList />\n        </div>\n        }\n      </div>\n    </Router>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,eAAe,EAAEC,QAAQ,QAAQ,wBAAwB;AAClE,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAA;AAEzE,MAAMC,KAAK,GAAG,MAAM;EAClB,oBACE;IAAA,UAAG;EAAI;IAAA;IAAA;IAAA;EAAA,QAAI;AAEf,CAAC;AAAA,KAJKA,KAAK;AAMX,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM0B,QAAQ,GAAGtB,WAAW,EAAE;EAC9B,MAAMuB,WAAW,GAAEzB,MAAM,EAAE;EAE3BD,SAAS,CAAC,MAAM;IACdyB,QAAQ,CAACf,eAAe,EAAE,CAAC;EAC7B,CAAC,EAAE,CAACe,QAAQ,CAAC,CAAC;EAEdzB,SAAS,CAAC,MAAM;IACd;IACA,MAAM2B,cAAc,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;IACvE;IACA,IAAIH,cAAc,EAAE;MAClB,MAAMI,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACN,cAAc,CAAC;MACzCF,QAAQ,CAACZ,QAAQ,CAACkB,MAAM,CAAC,CAAC;MAC1B;MACAN,QAAQ,CAACX,SAAS,CAACiB,MAAM,CAAC,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMjC,YAAY,CAACkC,KAAK,CAAC;QAAEjB,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAChEK,MAAM,CAACC,YAAY,CAACU,OAAO,CAAE,mBAAmB,EAAEP,IAAI,CAACQ,SAAS,CAACH,OAAO,CAAC,CAAE;MAC3EZ,QAAQ,CAACZ,QAAQ,CAACwB,OAAO,CAAC,CAAC;MAC3BZ,QAAQ,CAACX,SAAS,CAAC2B,IAAI,CAAC,CAAC;MACzBnB,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAOkB,SAAS,EAAE;MAClBjB,QAAQ,CAACb,QAAQ,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAC;IAC5D;EACF,CAAC;EAED,MAAM+B,OAAO,GAAIC,UAAU,IAAK;IAC9BlB,WAAW,CAACmB,OAAO,CAACC,WAAW,EAAE;IACjCrB,QAAQ,CAACd,QAAQ,CAACiC,UAAU,CAAC,CAAC;IAC9BnB,QAAQ,CAACb,QAAQ,CAAE,kBAAiBgC,UAAU,CAACG,KAAM,QAAOH,UAAU,CAACI,MAAO,iBAAgB,EAAE,CAAC,CAAC,CAAC;EACrG,CAAC;EAGD,MAAMC,SAAS,GAAG,MAAM;IACtB,oBACE,QAAC,SAAS;MAAC,WAAW,EAAC,OAAO;MAAA,uBAC5B,QAAC,SAAS;QACR,QAAQ,EAAE5B,QAAS;QACnB,QAAQ,EAAEE,QAAS;QACnB,oBAAoB,EAAE;UAAA,IAAC;YAAE2B;UAAO,CAAC;UAAA,OAAK5B,WAAW,CAAC4B,MAAM,CAACC,KAAK,CAAC;QAAA,CAAC;QAChE,oBAAoB,EAAE;UAAA,IAAC;YAAED;UAAO,CAAC;UAAA,OAAK1B,WAAW,CAAC0B,MAAM,CAACC,KAAK,CAAC;QAAA,CAAC;QAChE,YAAY,EAAEjB;MAAY;QAAA;QAAA;QAAA;MAAA;IAC1B;MAAA;MAAA;MAAA;IAAA,QACQ;EAEhB,CAAC;EAED,MAAMkB,MAAM,GAAG,MAAM;IACnB,IAAI;MACFxB,MAAM,CAACC,YAAY,CAACwB,UAAU,CAAC,mBAAmB,CAAC;MACnD,IAAI,CAAEzB,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAE,EAAE;QACvDF,MAAM,CAAC0B,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOb,SAAS,EAAE;MAClBc,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,MAAMhB,IAAI,GAAGvC,WAAW,CAACwD,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;EAGjD,oBACE,QAAC,MAAM;IAAA,uBACL;MAAA,wBACE;QAAA,UAAI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACd,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eAEhB,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,eAAE,QAAC,KAAK;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3C,QAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAElD;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACpC,EAGR,CAACgC,IAAI,IAAIQ,SAAS,EAAE,EACpBR,IAAI,iBAAI;QAAA,wBACP;UAAA,WAAIA,IAAI,CAACmB,UAAU,EAAC,eAAa;QAAA;UAAA;UAAA;UAAA;QAAA,QAAI,eACrC;UAAQ,OAAO,EAAER,MAAO;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS,eACxC,QAAC,SAAS;UAAC,WAAW,EAAC,UAAU;UAAC,GAAG,EAAE1B,WAAY;UAAA,uBACjD,QAAC,QAAQ;YAAC,UAAU,EAAEiB;UAAQ;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QACtB,eACZ;UAAA,UAAI;QAAS;UAAA;UAAA;UAAA;QAAA,QAAK,eAClB,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACT;IAAA;MAAA;MAAA;MAAA;IAAA;EAEF;IAAA;IAAA;IAAA;EAAA,QACC;AAEb,CAAC;AAAA,GAhHKvB,GAAG;EAAA,QAIUjB,WAAW,EA+EfD,WAAW;AAAA;AAAA,MAnFpBkB,GAAG;AAkHT,eAAeA,GAAG;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}