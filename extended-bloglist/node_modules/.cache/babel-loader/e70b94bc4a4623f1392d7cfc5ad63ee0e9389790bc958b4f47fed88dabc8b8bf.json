{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\components\\\\UserBlogs.js\",\n  _s = $RefreshSig$();\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useParams, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst textStyle = {\n  fontFamily: 'Tillana'\n};\nconst hrStyle = {\n  color: 'blue'\n};\nconst hrStyle1 = {\n  color: 'blue',\n  marginLeft: '-11%'\n};\nconst marginStyle = {\n  marginLeft: '1%'\n};\nconst UserBlogs = () => {\n  _s();\n  const id = useParams().id;\n  console.log(id, 'is id in usersblogs');\n  const bloggies = useSelector(state => state.blogs);\n  console.log(bloggies, 'is bloggies');\n\n  //const nomen = User.findById(id)\n\n  if (bloggies.length > 0) {\n    //find user that has same id as id\n    //save that user info to nomen\n\n    var nomen = '';\n    const posterBlogs = [];\n    const blogObj = {\n      title: '',\n      id: ''\n    };\n\n    //put blogs the user has posted into array\n    for (let j = 0; j < bloggies.length; j++) {\n      //if the user of the blog isn't null\n      if (bloggies[j].user) {\n        //console.log(bloggies[j].user, 'is bloggies j user when making sure it isn not null')\n        //if the id of the blog poster is the same as the id from saved user\n        if (bloggies[j].user.id === id) {\n          //console.log(bloggies[j].user, 'is bloggies j user when the user id equals id from params')\n          nomen = bloggies[j].user.personName;\n          const newBlogEntry = Object.create(blogObj);\n          newBlogEntry.title = bloggies[j].title;\n          newBlogEntry.id = bloggies[j].id;\n          posterBlogs.push(newBlogEntry);\n        }\n      }\n    }\n\n    //console.log(posterBlogs, 'is poster blogs')\n    //const phrases = anecdotes.find((words) => words.id=== Number(id))\n    //if do this don't think i can get nomen so not going to\n    //could do above for posterBlogs\n    //will decide later\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: textStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: nomen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: hrStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Here is the list of blogs \", nomen, \" has posted:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), posterBlogs.map((posting, ind) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: marginStyle,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/blogs/${posting.id}`,\n            children: posting.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: hrStyle1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, ind, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(UserBlogs, \"kPJtPqkhnTqvs2fiR6O7zCCluwo=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = UserBlogs;\nexport default UserBlogs;\nvar _c;\n$RefreshReg$(_c, \"UserBlogs\");","map":{"version":3,"names":["Spinner","useParams","Link","useSelector","textStyle","fontFamily","hrStyle","color","hrStyle1","marginLeft","marginStyle","UserBlogs","id","console","log","bloggies","state","blogs","length","nomen","posterBlogs","blogObj","title","j","user","personName","newBlogEntry","Object","create","push","map","posting","ind"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/components/UserBlogs.js"],"sourcesContent":["import Spinner from 'react-bootstrap/Spinner'\nimport { useParams, Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst textStyle = {\n  fontFamily: 'Tillana'\n}\n\nconst hrStyle = {\n  color: 'blue'\n}\n\nconst hrStyle1 = {\n  color: 'blue',\n  marginLeft: '-11%'\n}\n\nconst marginStyle = {\n  marginLeft: '1%'\n}\n\nconst UserBlogs = () => {\n  const id = useParams().id\n  console.log(id, 'is id in usersblogs')\n\n  const bloggies = useSelector(state => state.blogs)\n  console.log(bloggies, 'is bloggies')\n\n  //const nomen = User.findById(id)\n\n  if (bloggies.length > 0) {\n    //find user that has same id as id\n    //save that user info to nomen\n\n    var nomen = ''\n    const posterBlogs = []\n    const blogObj = {\n      title: '',\n      id: ''\n    }\n\n    //put blogs the user has posted into array\n    for (let j = 0; j < bloggies.length; j++) {\n      //if the user of the blog isn't null\n      if (bloggies[j].user){\n        //console.log(bloggies[j].user, 'is bloggies j user when making sure it isn not null')\n        //if the id of the blog poster is the same as the id from saved user\n        if (bloggies[j].user.id === id) {\n          //console.log(bloggies[j].user, 'is bloggies j user when the user id equals id from params')\n          nomen = bloggies[j].user.personName\n          const newBlogEntry = Object.create(blogObj)\n          newBlogEntry.title = bloggies[j].title\n          newBlogEntry.id = bloggies[j].id\n          posterBlogs.push(newBlogEntry)\n        }\n      }\n    }\n\n    //console.log(posterBlogs, 'is poster blogs')\n    //const phrases = anecdotes.find((words) => words.id=== Number(id))\n    //if do this don't think i can get nomen so not going to\n    //could do above for posterBlogs\n    //will decide later\n\n    return (\n      <div style={textStyle}>\n        <h1>{nomen}</h1>\n        <hr style={hrStyle}></hr>\n        <h3>Here is the list of blogs {nomen} has posted:</h3>\n        {posterBlogs.map((posting, ind) => {\n          return (\n            <div style={marginStyle} key={ind}>\n              <Link to={`/blogs/${posting.id}`}>{posting.title}</Link>\n              <hr style={hrStyle1}></hr>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return (\n    <Spinner animation=\"border\" variant=\"primary\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default UserBlogs"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}