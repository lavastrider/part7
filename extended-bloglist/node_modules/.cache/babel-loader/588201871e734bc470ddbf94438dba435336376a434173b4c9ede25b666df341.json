{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\components\\\\Users.js\",\n  _s = $RefreshSig$();\n//import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { initializeUsers } from '../reducers/userReducer';\nimport gravService from '../services/gravatar';\nimport { Table } from 'react-bootstrap';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userHeadStyle = {\n  textAlign: 'center',\n  color: 'black',\n  fontFamily: 'Tillana'\n};\n\n//const imgFlipStyle = {\n//  transform: 'scaleX(-1)'\n//}\n\nconst tableLineStyle = {\n  fontFamily: 'Tillana',\n  borderBottom: '1px solid #94B9F0'\n  //lineHeight: '50px'\n};\n\n//const vertLineStyle = {\n//  borderLeft: '5px red double',\n//  //position: 'absolute',\n//  width: '100%',\n//  height: '100%',\n//  //float: 'left',\n//  display: 'inline-block',\n//  backgroundColor: '#DEDEDB'\n//}\n\nconst spinnerStyle = {\n  color: 'purple'\n};\nconst textStyle = {\n  color: 'black'\n};\nconst imgStyle = {\n  borderRadius: 50\n};\nconst Users = () => {\n  _s();\n  const dispatch = useDispatch();\n  //const [userImg, setUserImg] = useState('')\n  //const [id, setId] = useState('')\n\n  useEffect(() => {\n    dispatch(initializeUsers());\n  }, []);\n\n  //useEffect(() => {\n  //  const getDataWrapper = async (id) => {\n  //    const response = await gravService.getImage(id)\n  //    console.log(response, 'is img in users')\n  //    setUserImg(response)\n  //  }\n  //  //getDataWrapper()\n  //}, [])\n\n  const bloggiesUsers = useSelector(state => state.userInfo.appendUsers);\n  console.log(bloggiesUsers, 'is bloggies users');\n\n  //const userArray = []\n  //const userAvi = {\n  //}\n\n  if (bloggiesUsers) {\n    const blogPosters = [];\n    const userInfo = {\n      poster: '',\n      posterUser: '',\n      posterId: '',\n      posterAvi: '',\n      posted: 0\n    };\n    for (let j = 0; j < bloggiesUsers.length; j++) {\n      //if array isn't empty\n      if (blogPosters.length !== 0) {\n        const newUserInfo = Object.create(userInfo);\n        newUserInfo.poster = bloggiesUsers[j].personName;\n        newUserInfo.posterUser = bloggiesUsers[j].username;\n        newUserInfo.posterId = bloggiesUsers[j].id;\n        newUserInfo.posterAvi = gravService.getImage(bloggiesUsers[j].id);\n        console.log(newUserInfo.posterAvi, 'is new user info poster avi right after api call');\n        newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length;\n        blogPosters.push(newUserInfo);\n      } else {\n        //the array is empty\n        //if the person has a name\n        if (bloggiesUsers[j].personName) {\n          const newUserInfo = Object.create(userInfo);\n          newUserInfo.poster = bloggiesUsers[j].personName;\n          newUserInfo.posterUser = bloggiesUsers[j].username;\n          newUserInfo.posterId = bloggiesUsers[j].id;\n          newUserInfo.posterAvi = gravService.getImage(bloggiesUsers[j].id);\n          console.log(newUserInfo.posterAvi, 'is new user info poster avi right after api call');\n          newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length;\n          blogPosters.push(newUserInfo);\n        }\n      }\n    }\n\n    //console.log(blogPosters, 'is blog posters')\n    //const avatar = 'https://static.vecteezy.com/system/resources/thumbnails/008/844/878/small/arrow-icon-design-free-png.png'\n    //useEffect(() => {\n\n    //}, [blogPosters])\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: userHeadStyle,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: tableLineStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"blogs posted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: blogPosters.map((posting, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: tableLineStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: posting.posterAvi,\n                  alt: \"user avatar\",\n                  width: \"20\",\n                  height: \"20\",\n                  style: imgStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 23\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n                  style: textStyle,\n                  to: `/users/${posting.posterId}`,\n                  children: [posting.poster, \" (\", posting.posterUser, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 117\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: posting.posted\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    style: spinnerStyle,\n    variant: \"primary\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"yNipSMRR4edJijHY1ugLCtKmrUE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["useDispatch","useSelector","Link","useEffect","initializeUsers","gravService","Table","Spinner","jsxDEV","_jsxDEV","userHeadStyle","textAlign","color","fontFamily","tableLineStyle","borderBottom","spinnerStyle","textStyle","imgStyle","borderRadius","Users","_s","dispatch","bloggiesUsers","state","userInfo","appendUsers","console","log","blogPosters","poster","posterUser","posterId","posterAvi","posted","j","length","newUserInfo","Object","create","personName","username","id","getImage","values","blogs","push","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","map","posting","ind","src","alt","width","height","to","animation","variant","_c","$RefreshReg$"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/components/Users.js"],"sourcesContent":["//import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { useEffect } from 'react'\nimport { initializeUsers } from '../reducers/userReducer'\nimport gravService from '../services/gravatar'\nimport { Table } from 'react-bootstrap'\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst userHeadStyle = {\n  textAlign: 'center',\n  color: 'black',\n  fontFamily: 'Tillana'\n}\n\n//const imgFlipStyle = {\n//  transform: 'scaleX(-1)'\n//}\n\nconst tableLineStyle = {\n  fontFamily: 'Tillana',\n  borderBottom: '1px solid #94B9F0',\n  //lineHeight: '50px'\n}\n\n//const vertLineStyle = {\n//  borderLeft: '5px red double',\n//  //position: 'absolute',\n//  width: '100%',\n//  height: '100%',\n//  //float: 'left',\n//  display: 'inline-block',\n//  backgroundColor: '#DEDEDB'\n//}\n\nconst spinnerStyle = {\n  color: 'purple'\n}\n\nconst textStyle = {\n  color: 'black'\n}\n\nconst imgStyle = {\n  borderRadius: 50\n}\n\nconst Users = () => {\n\n  const dispatch = useDispatch()\n  //const [userImg, setUserImg] = useState('')\n  //const [id, setId] = useState('')\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [])\n\n  //useEffect(() => {\n  //  const getDataWrapper = async (id) => {\n  //    const response = await gravService.getImage(id)\n  //    console.log(response, 'is img in users')\n  //    setUserImg(response)\n  //  }\n  //  //getDataWrapper()\n  //}, [])\n\n  const bloggiesUsers = useSelector(state => state.userInfo.appendUsers)\n  console.log(bloggiesUsers, 'is bloggies users')\n\n  //const userArray = []\n  //const userAvi = {\n  //}\n\n  if (bloggiesUsers) {\n\n    const blogPosters = []\n    const userInfo = {\n      poster: '',\n      posterUser: '',\n      posterId: '',\n      posterAvi: '',\n      posted: 0\n    }\n\n    for (let j = 0; j < bloggiesUsers.length; j++) {\n      //if array isn't empty\n      if (blogPosters.length !== 0) {\n        const newUserInfo = Object.create(userInfo)\n        newUserInfo.poster = bloggiesUsers[j].personName\n        newUserInfo.posterUser = bloggiesUsers[j].username\n        newUserInfo.posterId = bloggiesUsers[j].id\n        newUserInfo.posterAvi = gravService.getImage(bloggiesUsers[j].id)\n        console.log(newUserInfo.posterAvi, 'is new user info poster avi right after api call')\n        newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length\n        blogPosters.push(newUserInfo)\n      }\n      else { //the array is empty\n        //if the person has a name\n        if (bloggiesUsers[j].personName) {\n          const newUserInfo = Object.create(userInfo)\n          newUserInfo.poster = bloggiesUsers[j].personName\n          newUserInfo.posterUser = bloggiesUsers[j].username\n          newUserInfo.posterId = bloggiesUsers[j].id\n          newUserInfo.posterAvi = gravService.getImage(bloggiesUsers[j].id)\n          console.log(newUserInfo.posterAvi, 'is new user info poster avi right after api call')\n          newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length\n          blogPosters.push(newUserInfo)\n        }\n      }\n    }\n\n    //console.log(blogPosters, 'is blog posters')\n    //const avatar = 'https://static.vecteezy.com/system/resources/thumbnails/008/844/878/small/arrow-icon-design-free-png.png'\n    //useEffect(() => {\n\n    //}, [blogPosters])\n\n    return (\n      <div className='container'>\n        <div style={userHeadStyle}>\n          <h2>Users</h2>\n        </div>\n        <Table>\n          <thead>\n            <tr style={tableLineStyle}>\n              <td></td>\n              <td><strong>blogs posted</strong></td>\n            </tr>\n          </thead>\n          <tbody>\n            {blogPosters.map((posting, ind) => {\n              return (\n                <tr style={tableLineStyle} key={ind}>\n                  <td><img src={posting.posterAvi} alt='user avatar' width='20' height='20' style={imgStyle}></img> <Link style={textStyle} to={`/users/${posting.posterId}`}>{posting.poster} ({posting.posterUser})</Link></td>\n                  <td>{posting.posted}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n\n  return(\n    <Spinner animation=\"border\" style={spinnerStyle} variant=\"primary\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Users"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}