{"ast":null,"code":"import _slicedToArray from\"C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';export var useField=function useField(type){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];//console.log(type, 'is type in usefield')\n//console.log(value, 'is value in usefield')\nvar onChange=function onChange(event){setValue(event.target.value);};return{type:type,value:value,onChange:onChange};};","map":{"version":3,"names":["useState","useField","type","value","setValue","onChange","event","target"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/hooks/index.js"],"sourcesContent":["import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n  //console.log(type, 'is type in usefield')\n  //console.log(value, 'is value in usefield')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    type,\n    value,\n    onChange\n  }\n}\n"],"mappings":"8IAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,MAAO,IAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,IAAI,CAAK,CAChC,cAA0BF,QAAQ,CAAC,EAAE,CAAC,wCAA/BG,KAAK,eAAEC,QAAQ,eACtB;AACA;AAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,KAAK,CAAK,CAC1BF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAC,CAC9B,CAAC,CAED,MAAO,CACLD,IAAI,CAAJA,IAAI,CACJC,KAAK,CAALA,KAAK,CACLE,QAAQ,CAARA,QACF,CAAC,CACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}