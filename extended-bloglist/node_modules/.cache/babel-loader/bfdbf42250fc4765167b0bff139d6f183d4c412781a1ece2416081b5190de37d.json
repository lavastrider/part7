{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import notifReducer from'./reducers/notifReducer';import blogReducer from'./reducers/blogReducer';import userReducer from'./reducers/userReducer';import commentReducer from'./reducers/commentReducer';var store=configureStore({reducer:{blogs:blogReducer,userInfo:userReducer,notification:notifReducer,comments:commentReducer}});console.log(store.getState(),'is store get state in store.js');//console.log(store.getState().blogs, 'is store get state blogs in store.js')\n//console.log(store.getState().blogs.PromiseResult, 'is store get state blogs promise result in store.js')\nexport default store;","map":{"version":3,"names":["configureStore","notifReducer","blogReducer","userReducer","commentReducer","store","reducer","blogs","userInfo","notification","comments","console","log","getState"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport notifReducer from './reducers/notifReducer'\nimport blogReducer from './reducers/blogReducer'\nimport userReducer from './reducers/userReducer'\nimport commentReducer from './reducers/commentReducer'\n\nconst store = configureStore({\n  reducer: {\n    blogs: blogReducer,\n    userInfo: userReducer,\n    notification: notifReducer,\n    comments: commentReducer\n  }\n})\n\nconsole.log(store.getState(), 'is store get state in store.js')\n//console.log(store.getState().blogs, 'is store get state blogs in store.js')\n//console.log(store.getState().blogs.PromiseResult, 'is store get state blogs promise result in store.js')\n\nexport default store"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAOC,aAAY,KAAM,yBAAyB,CAClD,MAAOC,YAAW,KAAM,wBAAwB,CAChD,MAAOC,YAAW,KAAM,wBAAwB,CAChD,MAAOC,eAAc,KAAM,2BAA2B,CAEtD,GAAMC,MAAK,CAAGL,cAAc,CAAC,CAC3BM,OAAO,CAAE,CACPC,KAAK,CAAEL,WAAW,CAClBM,QAAQ,CAAEL,WAAW,CACrBM,YAAY,CAAER,YAAY,CAC1BS,QAAQ,CAAEN,cACZ,CACF,CAAC,CAAC,CAEFO,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,EAAE,CAAE,gCAAgC,CAAC,CAC/D;AACA;AAEA,cAAeR,MAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}