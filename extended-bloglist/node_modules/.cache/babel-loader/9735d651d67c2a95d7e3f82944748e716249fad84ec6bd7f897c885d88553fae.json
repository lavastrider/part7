{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\components\\\\Users.js\",\n  _s = $RefreshSig$();\n//import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { initializeUsers } from '../reducers/userReducer';\n//import gravService from '../services/gravatar'\nimport { Table } from 'react-bootstrap';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userHeadStyle = {\n  textAlign: 'center',\n  color: 'black',\n  fontFamily: 'Tillana'\n};\n\n//const imgFlipStyle = {\n//  transform: 'scaleX(-1)'\n//}\n\nconst tableLineStyle = {\n  fontFamily: 'Tillana',\n  borderBottom: '1px solid #94B9F0'\n  //lineHeight: '50px'\n};\n\n//const vertLineStyle = {\n//  borderLeft: '5px red double',\n//  //position: 'absolute',\n//  width: '100%',\n//  height: '100%',\n//  //float: 'left',\n//  display: 'inline-block',\n//  backgroundColor: '#DEDEDB'\n//}\n\nconst spinnerStyle = {\n  color: 'purple'\n};\nconst textStyle = {\n  color: 'black'\n};\nconst imgStyle = {\n  borderRadius: 50\n};\nconst Users = () => {\n  _s();\n  const dispatch = useDispatch();\n  //const [userImg, setUserImg] = useState('')\n  //const [id, setId] = useState('')\n\n  useEffect(() => {\n    dispatch(initializeUsers());\n  }, []);\n\n  //useEffect(() => {\n  //  const getDataWrapper = async () => {\n  //    const response = await gravService.getImage(id)\n  //    console.log(response, 'is img in users')\n  //    setUserImg(response)\n  //  }\n  //  getDataWrapper()\n  //}, [])\n\n  const setup = useSelector(state => state.userInfo);\n  console.log(setup, 'is setup in users');\n  if (setup) {\n    const bloggiesUsers = useSelector(state => state.userInfo.appendUsers);\n    console.log(bloggiesUsers, 'is bloggies users');\n    if (bloggiesUsers) {\n      //console.log(bloggiesUsers.length, 'is bloggies users length')\n\n      const blogPosters = [];\n      const userInfo = {\n        poster: '',\n        posterUser: '',\n        posterId: '',\n        posted: 0\n      };\n      for (let j = 0; j < bloggiesUsers.length; j++) {\n        //if array isn't empty\n        if (blogPosters.length !== 0) {\n          const newUserInfo = Object.create(userInfo);\n          newUserInfo.poster = bloggiesUsers[j].personName;\n          newUserInfo.posterUser = bloggiesUsers[j].username;\n          newUserInfo.posterId = bloggiesUsers[j].id;\n          newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length;\n          blogPosters.push(newUserInfo);\n        } else {\n          //the array is empty\n          //if the person has a name\n          if (bloggiesUsers[j].personName) {\n            const newUserInfo = Object.create(userInfo);\n            newUserInfo.poster = bloggiesUsers[j].personName;\n            newUserInfo.posterUser = bloggiesUsers[j].username;\n            newUserInfo.posterId = bloggiesUsers[j].id;\n            newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length;\n            blogPosters.push(newUserInfo);\n          }\n        }\n      }\n\n      //console.log(blogPosters, 'is blog posters')\n\n      //const kbImg = 'https://c8.alamy.com/comp/AY7NJT/close-up-of-persons-fingers-pressing-laptop-keyboard-with-english-AY7NJT.jpg'\n      //const avatar = 'https://static.vecteezy.com/system/resources/thumbnails/008/844/878/small/arrow-icon-design-free-png.png'\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: userHeadStyle,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: tableLineStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"blogs posted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: blogPosters.map((posting, ind) => {\n              setId(posting.posterId);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: tableLineStyle,\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: userImg,\n                    alt: \"user avatar\",\n                    width: \"20\",\n                    height: \"20\",\n                    style: imgStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n                    style: textStyle,\n                    to: `/users/${posting.posterId}`,\n                    children: [posting.poster, \" (\", posting.posterUser, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 109\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: posting.posted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this)]\n              }, ind, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    style: spinnerStyle,\n    variant: \"primary\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"5gLI6NfaNPyU0ARUpwY0TXX0Sdk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["useDispatch","useSelector","Link","useEffect","initializeUsers","Table","Spinner","jsxDEV","_jsxDEV","userHeadStyle","textAlign","color","fontFamily","tableLineStyle","borderBottom","spinnerStyle","textStyle","imgStyle","borderRadius","Users","_s","dispatch","setup","state","userInfo","console","log","bloggiesUsers","appendUsers","blogPosters","poster","posterUser","posterId","posted","j","length","newUserInfo","Object","create","personName","username","id","values","blogs","push","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","map","posting","ind","setId","src","userImg","alt","width","height","to","animation","variant","_c","$RefreshReg$"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/components/Users.js"],"sourcesContent":["//import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { useEffect } from 'react'\nimport { initializeUsers } from '../reducers/userReducer'\n//import gravService from '../services/gravatar'\nimport { Table } from 'react-bootstrap'\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst userHeadStyle = {\n  textAlign: 'center',\n  color: 'black',\n  fontFamily: 'Tillana'\n}\n\n//const imgFlipStyle = {\n//  transform: 'scaleX(-1)'\n//}\n\nconst tableLineStyle = {\n  fontFamily: 'Tillana',\n  borderBottom: '1px solid #94B9F0',\n  //lineHeight: '50px'\n}\n\n//const vertLineStyle = {\n//  borderLeft: '5px red double',\n//  //position: 'absolute',\n//  width: '100%',\n//  height: '100%',\n//  //float: 'left',\n//  display: 'inline-block',\n//  backgroundColor: '#DEDEDB'\n//}\n\nconst spinnerStyle = {\n  color: 'purple'\n}\n\nconst textStyle = {\n  color: 'black'\n}\n\nconst imgStyle = {\n  borderRadius: 50\n}\n\nconst Users = () => {\n\n  const dispatch = useDispatch()\n  //const [userImg, setUserImg] = useState('')\n  //const [id, setId] = useState('')\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [])\n\n  //useEffect(() => {\n  //  const getDataWrapper = async () => {\n  //    const response = await gravService.getImage(id)\n  //    console.log(response, 'is img in users')\n  //    setUserImg(response)\n  //  }\n  //  getDataWrapper()\n  //}, [])\n\n  const setup = useSelector(state => state.userInfo)\n  console.log(setup, 'is setup in users')\n\n  if (setup) {\n    const bloggiesUsers = useSelector(state => state.userInfo.appendUsers)\n    console.log(bloggiesUsers, 'is bloggies users')\n\n    if (bloggiesUsers) {\n      //console.log(bloggiesUsers.length, 'is bloggies users length')\n\n      const blogPosters = []\n      const userInfo = {\n        poster: '',\n        posterUser: '',\n        posterId: '',\n        posted: 0\n      }\n\n      for (let j = 0; j < bloggiesUsers.length; j++) {\n        //if array isn't empty\n        if (blogPosters.length !== 0) {\n          const newUserInfo = Object.create(userInfo)\n          newUserInfo.poster = bloggiesUsers[j].personName\n          newUserInfo.posterUser = bloggiesUsers[j].username\n          newUserInfo.posterId = bloggiesUsers[j].id\n          newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length\n          blogPosters.push(newUserInfo)\n        }\n        else { //the array is empty\n          //if the person has a name\n          if (bloggiesUsers[j].personName) {\n            const newUserInfo = Object.create(userInfo)\n            newUserInfo.poster = bloggiesUsers[j].personName\n            newUserInfo.posterUser = bloggiesUsers[j].username\n            newUserInfo.posterId = bloggiesUsers[j].id\n            newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length\n            blogPosters.push(newUserInfo)\n          }\n        }\n      }\n\n      //console.log(blogPosters, 'is blog posters')\n\n      //const kbImg = 'https://c8.alamy.com/comp/AY7NJT/close-up-of-persons-fingers-pressing-laptop-keyboard-with-english-AY7NJT.jpg'\n      //const avatar = 'https://static.vecteezy.com/system/resources/thumbnails/008/844/878/small/arrow-icon-design-free-png.png'\n\n      return (\n        <div className='container'>\n          <div style={userHeadStyle}>\n            <h2>Users</h2>\n          </div>\n          <Table>\n            <thead>\n              <tr style={tableLineStyle}>\n                <td></td>\n                <td><strong>blogs posted</strong></td>\n              </tr>\n            </thead>\n            <tbody>\n              {blogPosters.map((posting, ind) => {\n                setId(posting.posterId)\n                return (\n                  <tr style={tableLineStyle} key={ind}>\n                    <td><img src={userImg} alt='user avatar' width='20' height='20' style={imgStyle}></img> <Link style={textStyle} to={`/users/${posting.posterId}`}>{posting.poster} ({posting.posterUser})</Link></td>\n                    <td>{posting.posted}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n        </div>\n      )\n    }\n  }\n\n  return(\n    <Spinner animation=\"border\" style={spinnerStyle} variant=\"primary\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Users"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}