{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport blogService from '../services/blogs';\nimport userService from '../services/user';\n//import { setNotif } from './notifReducer'\n\nconst initialState = [];\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    saveUser(state, action) {\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in save user');\n      console.log(state, 'is state in save user');\n      console.log(action, 'is action in save user');\n      const copyStateLogin = {\n        ...state\n      };\n      copyState.loggedUser = action.payload;\n      return copyStateLogin;\n      //return state.concat(action.payload)\n    },\n\n    setToken(state, action) {\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in set token');\n      console.log(action, 'is action in set token');\n      const copyStateToken = {\n        ...state\n      };\n      copyStateToken.token = action.payload;\n      return copyStateToken;\n      //return action.payload\n    },\n\n    appendUsers(state, action) {\n      console.log(action, 'is action in append users');\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in append users');\n      //const copyState = [ ...state ]\n      const copyState = {\n        ...state\n      };\n      console.log(copyState, 'is copy state in append users');\n      //copyState.concat(action.payload)\n      copyState.appendUsers = action.payload;\n      return copyState;\n      //return state.concat(action.payload)\n    }\n  }\n});\n\nexport const {\n  saveUser,\n  setToken,\n  appendUsers\n} = userSlice.actions;\nexport const userData = user => {\n  //will use save user reducer\n  console.log(user, 'is user in userdata');\n  return async dispatch => {\n    const userInfo = user;\n    dispatch(saveUser(userInfo));\n  };\n};\nexport const userToken = user => {\n  return async dispatch => {\n    console.log(user, 'is user arg in user token in user reducer');\n    const useToke = await blogService.setToken(user.token);\n    console.log(user.token, 'is user dot token in usertoken in user reducer');\n    console.log(useToke, 'is usetoke in usertoken in user reducer');\n    dispatch(setToken(useToke));\n  };\n};\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const userList = await userService.getAll();\n    console.log(userList, 'is userList in get users');\n    dispatch(appendUsers(userList));\n  };\n};\nexport const newUser = user => {\n  return async dispatch => {\n    const newUserData = await userService.create(user);\n    dispatch(appendUsers(newUserData));\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","blogService","userService","initialState","userSlice","name","reducers","saveUser","state","action","console","log","JSON","parse","stringify","copyStateLogin","copyState","loggedUser","payload","setToken","copyStateToken","token","appendUsers","actions","userData","user","dispatch","userInfo","userToken","useToke","initializeUsers","userList","getAll","newUser","newUserData","create","reducer"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/reducers/userReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport blogService from '../services/blogs'\nimport userService from '../services/user'\n//import { setNotif } from './notifReducer'\n\nconst initialState = []\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    saveUser(state, action) {\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in save user')\n      console.log(state, 'is state in save user')\n      console.log(action, 'is action in save user')\n      const copyStateLogin = { ...state }\n      copyState.loggedUser = action.payload\n      return copyStateLogin\n      //return state.concat(action.payload)\n    },\n    setToken(state, action) {\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in set token')\n      console.log(action, 'is action in set token')\n      const copyStateToken = { ...state }\n      copyStateToken.token = action.payload\n      return copyStateToken\n      //return action.payload\n    },\n    appendUsers(state, action) {\n      console.log(action, 'is action in append users')\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in append users')\n      //const copyState = [ ...state ]\n      const copyState = { ...state }\n      console.log(copyState, 'is copy state in append users')\n      //copyState.concat(action.payload)\n      copyState.appendUsers = action.payload\n      return copyState\n      //return state.concat(action.payload)\n    }\n  }\n})\n\nexport const { saveUser, setToken, appendUsers } = userSlice.actions\n\nexport const userData = (user) => {\n  //will use save user reducer\n  console.log(user, 'is user in userdata')\n  return async dispatch => {\n    const userInfo = user\n    dispatch(saveUser(userInfo))\n  }\n}\n\nexport const userToken = (user) => {\n  return async dispatch => {\n    console.log(user, 'is user arg in user token in user reducer')\n    const useToke = await blogService.setToken(user.token)\n    console.log(user.token, 'is user dot token in usertoken in user reducer')\n    console.log(useToke, 'is usetoke in usertoken in user reducer')\n    dispatch(setToken(useToke))\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const userList = await userService.getAll()\n    console.log(userList, 'is userList in get users')\n    dispatch(appendUsers(userList))\n  }\n}\n\nexport const newUser = (user) => {\n  return async dispatch => {\n    const newUserData = await userService.create(user)\n    dispatch(appendUsers(newUserData))\n  }\n}\n\nexport default userSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}