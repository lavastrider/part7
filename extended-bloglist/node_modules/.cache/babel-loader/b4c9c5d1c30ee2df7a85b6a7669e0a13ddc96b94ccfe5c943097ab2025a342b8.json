{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport blogService from '../services/blogs';\n//import { setNotif } from './notifReducer'\n\nconst initialState = null;\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    saveUser(state, action) {\n      //console.log(JSON.parse(JSON.stringify(state)), 'is json json state in save user')\n      //console.log(state, 'is state in save user')\n      console.log(action, 'is action in save user');\n      //const userInfoWithId = 'test'\n      return action.payload;\n    },\n    setToken(state, action) {\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in set token');\n      console.log(action, 'is action in set token');\n      return 'peep';\n    }\n  }\n});\nexport const {\n  saveUser,\n  setToken\n} = userSlice.actions;\nexport const userData = user => {\n  //will use save user reducer\n  //console.log(user, 'is user in userdata')\n  return async dispatch => {\n    const userInfo = user;\n    dispatch(saveUser(userInfo));\n  };\n};\nexport const userToken = user => {\n  return async dispatch => {\n    const useToke = await blogService.setToken(user.token);\n    dispatch(setToken(useToke));\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","blogService","initialState","userSlice","name","reducers","saveUser","state","action","console","log","payload","setToken","JSON","parse","stringify","actions","userData","user","dispatch","userInfo","userToken","useToke","token","reducer"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/reducers/userReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport blogService from '../services/blogs'\n//import { setNotif } from './notifReducer'\n\nconst initialState = null\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    saveUser(state, action) {\n      //console.log(JSON.parse(JSON.stringify(state)), 'is json json state in save user')\n      //console.log(state, 'is state in save user')\n      console.log(action, 'is action in save user')\n      //const userInfoWithId = 'test'\n      return action.payload\n    },\n    setToken(state, action) {\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in set token')\n      console.log(action, 'is action in set token')\n      return 'peep'\n    }\n  }\n})\n\nexport const { saveUser, setToken } = userSlice.actions\n\nexport const userData = (user) => {\n  //will use save user reducer\n  //console.log(user, 'is user in userdata')\n  return async dispatch => {\n    const userInfo = user\n    dispatch(saveUser(userInfo))\n  }\n}\n\nexport const userToken = (user) => {\n  return async dispatch => {\n    const useToke = await blogService.setToken(user.token)\n    dispatch(setToken(useToke))\n  }\n}\n\nexport default userSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,mBAAmB;AAC3C;;AAEA,MAAMC,YAAY,GAAG,IAAI;AAEzB,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZF,YAAY;EACZG,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtB;MACA;MACAC,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,wBAAwB,CAAC;MAC7C;MACA,OAAOA,MAAM,CAACG,OAAO;IACvB,CAAC;IACDC,QAAQ,CAACL,KAAK,EAAEC,MAAM,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACR,KAAK,CAAC,CAAC,EAAE,iCAAiC,CAAC;MACjFE,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,wBAAwB,CAAC;MAC7C,OAAO,MAAM;IACf;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF,QAAQ;EAAEM;AAAS,CAAC,GAAGT,SAAS,CAACa,OAAO;AAEvD,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAChC;EACA;EACA,OAAO,MAAMC,QAAQ,IAAI;IACvB,MAAMC,QAAQ,GAAGF,IAAI;IACrBC,QAAQ,CAACb,QAAQ,CAACc,QAAQ,CAAC,CAAC;EAC9B,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIH,IAAI,IAAK;EACjC,OAAO,MAAMC,QAAQ,IAAI;IACvB,MAAMG,OAAO,GAAG,MAAMrB,WAAW,CAACW,QAAQ,CAACM,IAAI,CAACK,KAAK,CAAC;IACtDJ,QAAQ,CAACP,QAAQ,CAACU,OAAO,CAAC,CAAC;EAC7B,CAAC;AACH,CAAC;AAED,eAAenB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}