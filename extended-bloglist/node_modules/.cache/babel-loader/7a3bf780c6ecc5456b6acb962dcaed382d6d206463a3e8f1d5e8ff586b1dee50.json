{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';//const baseUrl = 'https://www.gravatar.com'\n//const cors = require('cors')\nvar getImage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id){var userImgData,userImgDataMap,userImgFilter;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(id,'is id in gravatar getimg. it should be the same as the user id');_context.next=3;return axios.get('/api/grav');case 3:userImgData=_context.sent;//console.log(userImgData, 'is user img data')\nconsole.log(userImgData.data,'is user img data in get img');userImgDataMap=userImgData.data.map(function(userInfo){return userInfo.id===id?userInfo.thumbnail:null;});console.log(userImgDataMap,'is user img data map');userImgFilter=userImgDataMap.filter(function(value){return value!==null;});//console.log(userImgFilter, 'is filter')\nreturn _context.abrupt(\"return\",userImgFilter);case 9:case\"end\":return _context.stop();}},_callee);}));return function getImage(_x){return _ref.apply(this,arguments);};}();export default{getImage:getImage};","map":{"version":3,"names":["axios","getImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","userImgData","userImgDataMap","userImgFilter","wrap","_callee$","_context","prev","next","console","log","get","sent","data","map","userInfo","thumbnail","filter","value","abrupt","stop","_x","apply","arguments"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/services/gravatar.js"],"sourcesContent":["import axios from 'axios'\n//const baseUrl = 'https://www.gravatar.com'\n//const cors = require('cors')\n\nconst getImage = async ( id ) => {\n  console.log(id, 'is id in gravatar getimg. it should be the same as the user id')\n  const userImgData = await axios.get('/api/grav')\n  //console.log(userImgData, 'is user img data')\n  console.log(userImgData.data, 'is user img data in get img')\n  const userImgDataMap = userImgData.data.map((userInfo) => userInfo.id === id ? userInfo.thumbnail : null)\n  console.log(userImgDataMap, 'is user img data map')\n  const userImgFilter = userImgDataMap.filter((value) => value !== (null))\n  //console.log(userImgFilter, 'is filter')\n  return userImgFilter\n}\n\nexport default {\n  getImage\n}"],"mappings":"4SAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AACA;AAEA,GAAM,CAAAC,QAAQ,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAQC,EAAE,MAAAC,WAAA,CAAAC,cAAA,CAAAC,aAAA,QAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACzBC,OAAO,CAACC,GAAG,CAACV,EAAE,CAAE,gEAAgE,CAAC,CAAAM,QAAA,CAAAE,IAAA,SACvD,CAAAf,KAAK,CAACkB,GAAG,CAAC,WAAW,CAAC,QAA1CV,WAAW,CAAAK,QAAA,CAAAM,IAAA,CACjB;AACAH,OAAO,CAACC,GAAG,CAACT,WAAW,CAACY,IAAI,CAAE,6BAA6B,CAAC,CACtDX,cAAc,CAAGD,WAAW,CAACY,IAAI,CAACC,GAAG,CAAC,SAACC,QAAQ,QAAK,CAAAA,QAAQ,CAACf,EAAE,GAAKA,EAAE,CAAGe,QAAQ,CAACC,SAAS,CAAG,IAAI,GAAC,CACzGP,OAAO,CAACC,GAAG,CAACR,cAAc,CAAE,sBAAsB,CAAC,CAC7CC,aAAa,CAAGD,cAAc,CAACe,MAAM,CAAC,SAACC,KAAK,QAAK,CAAAA,KAAK,GAAM,IAAK,GAAC,CACxE;AAAA,OAAAZ,QAAA,CAAAa,MAAA,UACOhB,aAAa,0BAAAG,QAAA,CAAAc,IAAA,MAAArB,OAAA,GACrB,kBAVK,CAAAL,QAAQA,CAAA2B,EAAA,SAAA1B,IAAA,CAAA2B,KAAA,MAAAC,SAAA,OAUb,CAED,cAAe,CACb7B,QAAQ,CAARA,QACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}