{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n//import { useState, useEffect, useRef } from 'react'\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n//import { useDispatch } from 'react-redux'\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm';\nimport Togglable from './components/Togglable';\n//import BlogForm from './components/BlogForm'\nimport BlogsList from './components/BlogsList';\n//import { initializeBlogs, newBlogs } from './reducers/blogReducer'\nimport { initializeBlogs } from './reducers/blogReducer';\nimport { setNotif } from './reducers/notifReducer';\nimport { userData, userToken } from './reducers/userReducer';\n//import {\n//  BrowserRouter as Router,\n//  Routes, Route, Link, useParams,\n//  useNavigate\n//} from 'react-router-dom'\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = () => {\n  const padding = {\n    paddingRight: 5\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        style: padding,\n        to: \"/\",\n        children: \"home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        style: padding,\n        to: \"/users\",\n        children: \"users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        style: padding,\n        to: \"/blogs\",\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = Menu;\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"this exercise is hard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Home;\nconst Users = () => {\n  _s();\n  const bloggies = useSelector(state => state.blogs);\n  console.log(bloggies, 'is bloggies');\n  if (bloggies.length > 0) {\n    const blogPosters = [];\n    const blogInfo = {\n      poster: '',\n      posted: 0\n    };\n\n    //put authors of blogs in author array, no duplicates\n    for (let j = 0; j < bloggies.length; j++) {\n      //if the array is not empty\n      if (blogPosters.length !== 0) {\n        //if the user isn't null\n        if (bloggies[j].user) {\n          //if the user isn't already there\n          if (!Object.values(blogPosters).map(creditor => creditor.poster.includes(bloggies[j].user.personName)).includes(true)) {\n            const newBlogInfo = Object.create(blogInfo);\n            newBlogInfo.poster = bloggies[j].user.personName;\n            newBlogInfo.posted = 1;\n            blogPosters.push(newBlogInfo);\n            //console.log(blogPosters, 'is blogPosters in if statement')\n          } //else the user is already in the list\n          else {\n            //console.log(`We found a match! ${blogs[j].author} already is in the list`)\n            const index = blogPosters.map(pencil => pencil.poster).indexOf(bloggies[j].user.personName);\n            //console.log(index, 'is index')\n            //console.log(blogPosters[index].likes, 'should be the amount of likes that', blogPosters[index].author, 'has')\n            if (blogPosters[index].poster === bloggies[j].user.personName) {\n              blogPosters[index].posted += 1;\n            }\n            //console.log(blogPosters[index].likes, 'is the new amount')\n          }\n        }\n      } else {\n        //the array is empty\n        if (bloggies[j].user) {\n          //console.log('the array is length zero')\n          //console.log(bloggies[j].user, 'is bloggies j user')\n          const newBlogInfo = Object.create(blogInfo);\n          newBlogInfo.poster = bloggies[j].user.personName;\n          newBlogInfo.posted = 1;\n          blogPosters.push(newBlogInfo);\n        }\n      }\n    }\n    console.log(blogPosters, 'is blogPosters');\n    const blogPostersObj = {\n      blogPosters\n    };\n    console.log(blogPostersObj, 'is blog poster obj');\n    const blogPostObjMa = blogPostersObj.blogPosters.map(usernomen => {\n      /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: usernomen.poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: usernomen.posted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this);\n    });\n    console.log(blogPostObjMa, 'is bPOM');\n    console.log(blogPosters.length, 'is blogposter length');\n    console.log(Object.values(blogPostersObj).length, 'is object values blogposter obj length');\n\n    //maybe do for loop that goes through blogPosters\n    //and for every value in blogPosters[i] it creates tr td of poster and posted?\n    //if so, would sort of still have same problem bc how put in return statement\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"blogs created\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: blogPosters.map((poster, posted) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [poster, \" is poster\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 16\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"3oFz3zta6US54efg1FSa63noG8M=\", false, function () {\n  return [useSelector];\n});\n_c3 = Users;\nconst App = () => {\n  _s2();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  //const blogFormRef= useRef()\n\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n  useEffect(() => {\n    //here is where we do login stuff\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n    //console.log(loggedUserJSON, 'is logged user')\n    if (loggedUserJSON) {\n      const usered = JSON.parse(loggedUserJSON);\n      dispatch(userData(usered));\n      //console.log(user, 'is user in useeffect')\n      dispatch(userToken(usered));\n    }\n  }, []);\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const usering = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(usering));\n      dispatch(userData(usering));\n      dispatch(userToken(user));\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(setNotif('Error: Wrong username or password', 5));\n    }\n  };\n\n  //const addBlog = (blogObject) => {\n  //  blogFormRef.current.toggleVisib()\n  //  dispatch(newBlogs(blogObject))\n  //  dispatch(setNotif(`The blog post \"${blogObject.title}\" by ${blogObject.author} has been added`, 5))\n  //}\n\n  const loginForm = () => {\n    return /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"login\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username,\n        password: password,\n        handleUsernameChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        },\n        handlePasswordChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        },\n        handleSubmit: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  };\n  const logOut = () => {\n    try {\n      window.localStorage.removeItem('loggedBlogAppUser');\n      if (!window.localStorage.getItem('loggedBlogAppUser')) {\n        window.location.reload(true);\n      }\n    } catch (exception) {\n      console.log('we have an error');\n    }\n  };\n\n  //mappedBlogs.sort((a,b) => b.props.blog.likes-a.props.blog.likes)\n  //console.log(mappedBlogs)\n  //console.log(mappedBlogs[0], 'is mapped blogs zero')\n  //console.log(mappedBlogs[0].props, 'is mapped blogs zero props')\n  //console.log(mappedBlogs[0].props.blog, 'is mapped blogs zero props blog')\n  //console.log(mappedBlogs[0].props.blog.likes, 'is mapped blogs zero props blog likes')\n\n  //console.log(blogs, 'is blogs')\n  //const sorted = [...blogs].sort((a,b) => a - b)\n  //console.log(sorted, 'is sorted')\n  //const sortVal = Object.values(blogs)\n  //console.log(sortVal, 'is sort val')\n\n  const user = useSelector(state => state.userInfo);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), !user && loginForm(), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.personName, \" is logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logOut,\n          children: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users\",\n          element: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/blogs\",\n          element: BlogsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"ge1LLWKR86tXd8Fik6FpjzHaKWc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Menu\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"Users\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","useEffect","useSelector","useDispatch","loginService","Notification","LoginForm","Togglable","BlogsList","initializeBlogs","setNotif","userData","userToken","BrowserRouter","Router","Routes","Route","Link","Menu","padding","paddingRight","Home","Users","bloggies","state","blogs","console","log","length","blogPosters","blogInfo","poster","posted","j","user","Object","values","map","creditor","includes","personName","newBlogInfo","create","push","index","pencil","indexOf","blogPostersObj","blogPostObjMa","usernomen","App","username","setUsername","password","setPassword","dispatch","loggedUserJSON","window","localStorage","getItem","usered","JSON","parse","handleLogin","event","preventDefault","usering","login","setItem","stringify","exception","loginForm","target","value","logOut","removeItem","location","reload","userInfo"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/App.js"],"sourcesContent":["//import { useState, useEffect, useRef } from 'react'\nimport { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n//import { useDispatch } from 'react-redux'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\n//import BlogForm from './components/BlogForm'\nimport BlogsList from './components/BlogsList'\n//import { initializeBlogs, newBlogs } from './reducers/blogReducer'\nimport { initializeBlogs } from './reducers/blogReducer'\nimport { setNotif } from './reducers/notifReducer'\nimport { userData, userToken } from './reducers/userReducer'\n//import {\n//  BrowserRouter as Router,\n//  Routes, Route, Link, useParams,\n//  useNavigate\n//} from 'react-router-dom'\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom'\n\nconst Menu = () => {\n  const padding = {\n    paddingRight: 5\n  }\n\n  return (\n    <div>\n      <div>\n        <Link style={padding} to=\"/\">home</Link>\n        <Link style={padding} to=\"/users\">users</Link>\n        <Link style={padding} to=\"/blogs\">blogs</Link>\n      </div>\n    </div>\n  )\n}\n\nconst Home = () => {\n  return(\n    <p>this exercise is hard</p>\n  )\n}\n\nconst Users = () => {\n  const bloggies = useSelector(state => state.blogs)\n  console.log(bloggies, 'is bloggies')\n\n  if (bloggies.length > 0) {\n    const blogPosters = []\n    const blogInfo = {\n      poster: '',\n      posted: 0\n    }\n\n    //put authors of blogs in author array, no duplicates\n    for (let j = 0; j<bloggies.length; j++) {\n      //if the array is not empty\n      if (blogPosters.length !== 0){\n        //if the user isn't null\n        if (bloggies[j].user) {\n        //if the user isn't already there\n          if (!(Object.values(blogPosters).map((creditor) => creditor.poster.includes(bloggies[j].user.personName)).includes(true))) {\n            const newBlogInfo = Object.create(blogInfo)\n            newBlogInfo.poster = bloggies[j].user.personName\n            newBlogInfo.posted = 1\n            blogPosters.push(newBlogInfo)\n            //console.log(blogPosters, 'is blogPosters in if statement')\n          } //else the user is already in the list\n          else {\n            //console.log(`We found a match! ${blogs[j].author} already is in the list`)\n            const index = blogPosters.map((pencil) => pencil.poster).indexOf(bloggies[j].user.personName)\n            //console.log(index, 'is index')\n            //console.log(blogPosters[index].likes, 'should be the amount of likes that', blogPosters[index].author, 'has')\n            if (blogPosters[index].poster === bloggies[j].user.personName) {\n              blogPosters[index].posted += 1\n            }\n          //console.log(blogPosters[index].likes, 'is the new amount')\n          }\n        }\n      }\n      else { //the array is empty\n        if (bloggies[j].user) {\n          //console.log('the array is length zero')\n          //console.log(bloggies[j].user, 'is bloggies j user')\n          const newBlogInfo = Object.create(blogInfo)\n          newBlogInfo.poster = bloggies[j].user.personName\n          newBlogInfo.posted = 1\n          blogPosters.push(newBlogInfo)\n        }\n      }\n    }\n    console.log(blogPosters, 'is blogPosters')\n\n    const blogPostersObj = { blogPosters }\n    console.log(blogPostersObj, 'is blog poster obj')\n\n    const blogPostObjMa = blogPostersObj.blogPosters.map( (usernomen) => {\n      <tr>\n        <td>{usernomen.poster}</td>\n        <td>{usernomen.posted}</td>\n      </tr>\n    })\n    console.log(blogPostObjMa, 'is bPOM')\n\n    console.log(blogPosters.length, 'is blogposter length')\n    console.log(Object.values(blogPostersObj).length, 'is object values blogposter obj length')\n\n    //maybe do for loop that goes through blogPosters\n    //and for every value in blogPosters[i] it creates tr td of poster and posted?\n    //if so, would sort of still have same problem bc how put in return statement\n\n\n    return (\n      <div>\n        <h1>Users</h1>\n        <table>\n          <thead>\n            <tr>\n              <td></td>\n              <td><strong>blogs created</strong></td>\n            </tr>\n          </thead>\n          <tbody>\n            {blogPosters.map((poster, posted) => {\n              return (\n               <tr>\n                 <td>{poster} is poster</td>\n               </tr>\n              )            \n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  return(\n    <div>\n      <h1>Users</h1>\n    </div>\n  )\n\n}\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n  //const blogFormRef= useRef()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    //here is where we do login stuff\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    //console.log(loggedUserJSON, 'is logged user')\n    if (loggedUserJSON) {\n      const usered = JSON.parse(loggedUserJSON)\n      dispatch(userData(usered))\n      //console.log(user, 'is user in useeffect')\n      dispatch(userToken(usered))\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const usering = await loginService.login({ username, password })\n      window.localStorage.setItem( 'loggedBlogAppUser', JSON.stringify(usering) )\n      dispatch(userData(usering))\n      dispatch(userToken(user))\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      dispatch(setNotif('Error: Wrong username or password', 5))\n    }\n  }\n\n  //const addBlog = (blogObject) => {\n  //  blogFormRef.current.toggleVisib()\n  //  dispatch(newBlogs(blogObject))\n  //  dispatch(setNotif(`The blog post \"${blogObject.title}\" by ${blogObject.author} has been added`, 5))\n  //}\n\n\n  const loginForm = () => {\n    return (\n      <Togglable buttonLabel='login'>\n        <LoginForm\n          username={username}\n          password={password}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          handleSubmit={handleLogin}\n        />\n      </Togglable>\n    )\n  }\n\n  const logOut = () => {\n    try {\n      window.localStorage.removeItem('loggedBlogAppUser')\n      if (!(window.localStorage.getItem('loggedBlogAppUser'))) {\n        window.location.reload(true)\n      }\n    } catch (exception) {\n      console.log('we have an error')\n    }\n  }\n\n  //mappedBlogs.sort((a,b) => b.props.blog.likes-a.props.blog.likes)\n  //console.log(mappedBlogs)\n  //console.log(mappedBlogs[0], 'is mapped blogs zero')\n  //console.log(mappedBlogs[0].props, 'is mapped blogs zero props')\n  //console.log(mappedBlogs[0].props.blog, 'is mapped blogs zero props blog')\n  //console.log(mappedBlogs[0].props.blog.likes, 'is mapped blogs zero props blog likes')\n\n  //console.log(blogs, 'is blogs')\n  //const sorted = [...blogs].sort((a,b) => a - b)\n  //console.log(sorted, 'is sorted')\n  //const sortVal = Object.values(blogs)\n  //console.log(sortVal, 'is sort val')\n\n  const user = useSelector(state => state.userInfo)\n\n\n  return (\n    <Router>\n      <div>\n        <Menu />\n        <h2>Blogs</h2>\n        <Notification />\n        {!user && loginForm()}\n        {user && <div>\n          <p>{user.personName} is logged in</p>\n          <button onClick={logOut}>logout</button>\n        </div>\n        }\n\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/users\" element={<Users />} />\n          <Route path=\"/blogs\" element={BlogsList} />\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}