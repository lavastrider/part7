{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport gravService from '../services/gravatar';\nconst initialState = [];\nconst gravSlice = createSlice({\n  name: 'userAvi',\n  initialState,\n  reducers: {\n    appendImages(state, action) {\n      console.log(action, 'is action in append users');\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in append users');\n      //const copyState = [ ...state ]\n      const copyState = {\n        ...state\n      };\n      console.log(copyState, 'is copy state in append users');\n      //copyState.concat(action.payload)\n      copyState.appendUsers = action.payload;\n      return copyState;\n      //return state.concat(action.payload)\n    }\n  }\n});\n\nexport const {\n  saveUser,\n  setToken,\n  appendUsers\n} = userSlice.actions;\nexport const userData = user => {\n  //will use save user reducer\n  console.log(user, 'is user in userdata');\n  return async dispatch => {\n    const userInfo = user;\n    dispatch(saveUser(userInfo));\n  };\n};\nexport const userToken = user => {\n  return async dispatch => {\n    console.log(user, 'is user arg in user token in user reducer');\n    const useToke = await blogService.setToken(user.token);\n    console.log(user.token, 'is user dot token in usertoken in user reducer');\n    console.log(useToke, 'is usetoke in usertoken in user reducer');\n    dispatch(setToken(useToke));\n  };\n};\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const imgList = await userService.getAll();\n    console.log(userList, 'is userList in get users');\n    dispatch(appendImages(userList));\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","gravService","initialState","gravSlice","name","reducers","appendImages","state","action","console","log","JSON","parse","stringify","copyState","appendUsers","payload","saveUser","setToken","userSlice","actions","userData","user","dispatch","userInfo","userToken","useToke","blogService","token","initializeUsers","imgList","userService","getAll","userList","reducer"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/reducers/gravReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport gravService from '../services/gravatar'\n\nconst initialState = []\n\nconst gravSlice = createSlice({\n  name: 'userAvi',\n  initialState,\n  reducers: {\n    appendImages(state, action) {\n      console.log(action, 'is action in append users')\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in append users')\n      //const copyState = [ ...state ]\n      const copyState = { ...state }\n      console.log(copyState, 'is copy state in append users')\n      //copyState.concat(action.payload)\n      copyState.appendUsers = action.payload\n      return copyState\n      //return state.concat(action.payload)\n    }\n  }\n})\n\nexport const { saveUser, setToken, appendUsers } = userSlice.actions\n\nexport const userData = (user) => {\n  //will use save user reducer\n  console.log(user, 'is user in userdata')\n  return async dispatch => {\n    const userInfo = user\n    dispatch(saveUser(userInfo))\n  }\n}\n\nexport const userToken = (user) => {\n  return async dispatch => {\n    console.log(user, 'is user arg in user token in user reducer')\n    const useToke = await blogService.setToken(user.token)\n    console.log(user.token, 'is user dot token in usertoken in user reducer')\n    console.log(useToke, 'is usetoke in usertoken in user reducer')\n    dispatch(setToken(useToke))\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const imgList = await userService.getAll()\n    console.log(userList, 'is userList in get users')\n    dispatch(appendImages(userList))\n  }\n}\n\nexport default userSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,sBAAsB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,SAAS;EACfF,YAAY;EACZG,QAAQ,EAAE;IACRC,YAAYA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC1BC,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,2BAA2B,CAAC;MAChDC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,KAAK,CAAC,CAAC,EAAE,oCAAoC,CAAC;MACpF;MACA,MAAMO,SAAS,GAAG;QAAE,GAAGP;MAAM,CAAC;MAC9BE,OAAO,CAACC,GAAG,CAACI,SAAS,EAAE,+BAA+B,CAAC;MACvD;MACAA,SAAS,CAACC,WAAW,GAAGP,MAAM,CAACQ,OAAO;MACtC,OAAOF,SAAS;MAChB;IACF;EACF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEG,QAAQ;EAAEC,QAAQ;EAAEH;AAAY,CAAC,GAAGI,SAAS,CAACC,OAAO;AAEpE,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAChC;EACAb,OAAO,CAACC,GAAG,CAACY,IAAI,EAAE,qBAAqB,CAAC;EACxC,OAAO,MAAMC,QAAQ,IAAI;IACvB,MAAMC,QAAQ,GAAGF,IAAI;IACrBC,QAAQ,CAACN,QAAQ,CAACO,QAAQ,CAAC,CAAC;EAC9B,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIH,IAAI,IAAK;EACjC,OAAO,MAAMC,QAAQ,IAAI;IACvBd,OAAO,CAACC,GAAG,CAACY,IAAI,EAAE,2CAA2C,CAAC;IAC9D,MAAMI,OAAO,GAAG,MAAMC,WAAW,CAACT,QAAQ,CAACI,IAAI,CAACM,KAAK,CAAC;IACtDnB,OAAO,CAACC,GAAG,CAACY,IAAI,CAACM,KAAK,EAAE,gDAAgD,CAAC;IACzEnB,OAAO,CAACC,GAAG,CAACgB,OAAO,EAAE,yCAAyC,CAAC;IAC/DH,QAAQ,CAACL,QAAQ,CAACQ,OAAO,CAAC,CAAC;EAC7B,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,MAAMN,QAAQ,IAAI;IACvB,MAAMO,OAAO,GAAG,MAAMC,WAAW,CAACC,MAAM,EAAE;IAC1CvB,OAAO,CAACC,GAAG,CAACuB,QAAQ,EAAE,0BAA0B,CAAC;IACjDV,QAAQ,CAACjB,YAAY,CAAC2B,QAAQ,CAAC,CAAC;EAClC,CAAC;AACH,CAAC;AAED,eAAed,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}