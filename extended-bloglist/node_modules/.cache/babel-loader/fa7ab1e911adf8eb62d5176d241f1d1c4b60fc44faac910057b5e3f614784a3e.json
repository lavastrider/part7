{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\components\\\\UserBlogs.js\",\n  _s = $RefreshSig$();\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useParams, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst textStyle = {\n  fontFamily: 'Tillana'\n};\nconst smallerTextStyle = {\n  fontSize: '20px',\n  marginLeft: '1%'\n};\nconst hrStyle = {\n  color: 'blue'\n};\nconst hrStyle1 = {\n  color: 'blue',\n  marginLeft: '-2%'\n};\nconst marginStyle = {\n  marginLeft: '1%'\n};\nconst marginStyle1 = {\n  marginLeft: '2%'\n};\nconst marginStyle2 = {\n  marginLeft: '3%'\n};\nconst UserBlogs = () => {\n  _s();\n  const id = useParams().id;\n  console.log(id, 'is id in usersblogs');\n  const bloggies = useSelector(state => state.blogs);\n  console.log(bloggies, 'is bloggies');\n\n  //const nomen = User.findById(id)\n\n  if (bloggies.length > 0) {\n    //find user that has same id as id\n    //save that user info to nomen\n\n    var nomen = '';\n    var nomenUse = '';\n    const posterBlogs = [];\n    const blogObj = {\n      title: '',\n      id: ''\n    };\n\n    //put blogs the user has posted into array\n    for (let j = 0; j < bloggies.length; j++) {\n      //if the user of the blog isn't null\n      if (bloggies[j].user) {\n        //console.log(bloggies[j].user, 'is bloggies j user when making sure it isn not null')\n        //if the id of the blog poster is the same as the id from saved user\n        if (bloggies[j].user.id === id) {\n          //console.log(bloggies[j].user, 'is bloggies j user when the user id equals id from params')\n          nomen = bloggies[j].user.personName;\n          nomenUse = bloggies[j].user.username;\n          const newBlogEntry = Object.create(blogObj);\n          newBlogEntry.title = bloggies[j].title;\n          newBlogEntry.id = bloggies[j].id;\n          posterBlogs.push(newBlogEntry);\n        }\n      }\n    }\n\n    //console.log(posterBlogs, 'is poster blogs')\n    //const phrases = anecdotes.find((words) => words.id=== Number(id))\n    //if do this don't think i can get nomen so not going to\n    //could do above for posterBlogs\n    //will decide later\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: textStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: marginStyle,\n        children: [nomen, \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: smallerTextStyle,\n          children: [\"aka \", nomenUse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: hrStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: marginStyle1,\n        children: [\"Here is the list of blogs \", nomen, \" has posted:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), posterBlogs.map((posting, ind) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: marginStyle2,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/blogs/${posting.id}`,\n            children: posting.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: hrStyle1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, ind, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(UserBlogs, \"kPJtPqkhnTqvs2fiR6O7zCCluwo=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = UserBlogs;\nexport default UserBlogs;\nvar _c;\n$RefreshReg$(_c, \"UserBlogs\");","map":{"version":3,"names":["Spinner","useParams","Link","useSelector","textStyle","fontFamily","smallerTextStyle","fontSize","marginLeft","hrStyle","color","hrStyle1","marginStyle","marginStyle1","marginStyle2","UserBlogs","id","console","log","bloggies","state","blogs","length","nomen","nomenUse","posterBlogs","blogObj","title","j","user","personName","username","newBlogEntry","Object","create","push","map","posting","ind"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/components/UserBlogs.js"],"sourcesContent":["import Spinner from 'react-bootstrap/Spinner'\nimport { useParams, Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst textStyle = {\n  fontFamily: 'Tillana'\n}\n\nconst smallerTextStyle = {\n  fontSize: '20px',\n  marginLeft: '1%'\n}\n\nconst hrStyle = {\n  color: 'blue'\n}\n\nconst hrStyle1 = {\n  color: 'blue',\n  marginLeft: '-2%'\n}\n\nconst marginStyle = {\n  marginLeft: '1%'\n}\n\nconst marginStyle1 = {\n  marginLeft: '2%'\n}\n\nconst marginStyle2 = {\n  marginLeft: '3%'\n}\n\nconst UserBlogs = () => {\n  const id = useParams().id\n  console.log(id, 'is id in usersblogs')\n\n  const bloggies = useSelector(state => state.blogs)\n  console.log(bloggies, 'is bloggies')\n\n  //const nomen = User.findById(id)\n\n  if (bloggies.length > 0) {\n    //find user that has same id as id\n    //save that user info to nomen\n\n    var nomen = ''\n    var nomenUse = ''\n    const posterBlogs = []\n    const blogObj = {\n      title: '',\n      id: ''\n    }\n\n    //put blogs the user has posted into array\n    for (let j = 0; j < bloggies.length; j++) {\n      //if the user of the blog isn't null\n      if (bloggies[j].user){\n        //console.log(bloggies[j].user, 'is bloggies j user when making sure it isn not null')\n        //if the id of the blog poster is the same as the id from saved user\n        if (bloggies[j].user.id === id) {\n          //console.log(bloggies[j].user, 'is bloggies j user when the user id equals id from params')\n          nomen = bloggies[j].user.personName\n          nomenUse = bloggies[j].user.username\n          const newBlogEntry = Object.create(blogObj)\n          newBlogEntry.title = bloggies[j].title\n          newBlogEntry.id = bloggies[j].id\n          posterBlogs.push(newBlogEntry)\n        }\n      }\n    }\n\n    //console.log(posterBlogs, 'is poster blogs')\n    //const phrases = anecdotes.find((words) => words.id=== Number(id))\n    //if do this don't think i can get nomen so not going to\n    //could do above for posterBlogs\n    //will decide later\n\n    return (\n      <div style={textStyle}>\n        <h1 style={marginStyle} >{nomen} <h3 style={smallerTextStyle}>aka {nomenUse}</h3></h1>\n        <hr style={hrStyle}></hr>\n        <h3 style={marginStyle1} >Here is the list of blogs {nomen} has posted:</h3>\n        {posterBlogs.map((posting, ind) => {\n          return (\n            <div style={marginStyle2} key={ind}>\n              <Link to={`/blogs/${posting.id}`}>{posting.title}</Link>\n              <hr style={hrStyle1}></hr>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return (\n    <Spinner animation=\"border\" variant=\"primary\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default UserBlogs"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}