{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst notifSlice = createSlice({\n  name: 'notify',\n  initialState: '',\n  reducers: {\n    notifHide(state, action) {\n      //console.log('we are in notifHide')\n      //console.log(action, 'is action in notifhide')\n      //console.log(JSON.parse(JSON.stringify(state)), 'is state in notifhide')\n      return null;\n    },\n    notifDisplay(state, action) {\n      //console.log('we are in notifDisplay')\n      //console.log(action, 'is action in notifdisplay')\n      return action.payload;\n    }\n  }\n});\nexport const {\n  notifHide,\n  notifDisplay\n} = notifSlice.actions;\nexport const setNotif = (displaying, timer) => {\n  //console.log(displaying, 'is displaying in setNotif')\n  //console.log(timer, 'is timer in setnotif')\n  const timerMil = timer * 1000;\n  return async dispatch => {\n    dispatch(notifDisplay(displaying));\n    setTimeout(() => dispatch(notifHide(timerMil)), timerMil);\n  };\n};\nexport default notifSlice.reducer;","map":{"version":3,"names":["createSlice","notifSlice","name","initialState","reducers","notifHide","state","action","notifDisplay","payload","actions","setNotif","displaying","timer","timerMil","dispatch","setTimeout","reducer"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/reducers/notifReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst notifSlice = createSlice({\n  name: 'notify',\n  initialState: '',\n  reducers: {\n    notifHide(state, action) {\n      //console.log('we are in notifHide')\n      //console.log(action, 'is action in notifhide')\n      //console.log(JSON.parse(JSON.stringify(state)), 'is state in notifhide')\n      return null\n    },\n    notifDisplay(state, action){\n      //console.log('we are in notifDisplay')\n      //console.log(action, 'is action in notifdisplay')\n      return action.payload\n    }\n  }\n})\n\n\nexport const { notifHide, notifDisplay } = notifSlice.actions\n\nexport const setNotif = (displaying, timer) => {\n  //console.log(displaying, 'is displaying in setNotif')\n  //console.log(timer, 'is timer in setnotif')\n  const timerMil = timer * 1000\n  return async dispatch => {\n    dispatch(notifDisplay(displaying))\n    setTimeout(() => dispatch(notifHide(timerMil)), timerMil)\n  }\n}\n\nexport default notifSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB;MACA;MACA;MACA,OAAO,IAAI;IACb,CAAC;IACDC,YAAY,CAACF,KAAK,EAAEC,MAAM,EAAC;MACzB;MACA;MACA,OAAOA,MAAM,CAACE,OAAO;IACvB;EACF;AACF,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEJ,SAAS;EAAEG;AAAa,CAAC,GAAGP,UAAU,CAACS,OAAO;AAE7D,OAAO,MAAMC,QAAQ,GAAG,CAACC,UAAU,EAAEC,KAAK,KAAK;EAC7C;EACA;EACA,MAAMC,QAAQ,GAAGD,KAAK,GAAG,IAAI;EAC7B,OAAO,MAAME,QAAQ,IAAI;IACvBA,QAAQ,CAACP,YAAY,CAACI,UAAU,CAAC,CAAC;IAClCI,UAAU,CAAC,MAAMD,QAAQ,CAACV,SAAS,CAACS,QAAQ,CAAC,CAAC,EAAEA,QAAQ,CAAC;EAC3D,CAAC;AACH,CAAC;AAED,eAAeb,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}