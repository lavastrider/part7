{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\components\\\\UserBlogs.js\",\n  _s = $RefreshSig$();\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useParams, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport gravService from '../services/gravatar';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst textStyle = {\n  fontFamily: 'Tillana'\n};\nconst smallerTextStyle = {\n  fontSize: '20px',\n  marginLeft: '1%'\n};\nconst hrStyle = {\n  color: '#94B9F0'\n  //borderColor: '#94B9F0'\n};\n\nconst hrStyle1 = {\n  color: '#94B9F0',\n  marginLeft: '-2%'\n};\nconst marginStyle = {\n  marginLeft: '1%'\n};\nconst marginStyle1 = {\n  marginLeft: '2%'\n};\nconst UserBlogs = () => {\n  _s();\n  const id = useParams().id;\n  console.log(id, 'is id in usersblogs');\n  const [userImg, setUserImg] = useState('');\n  const bloggies = useSelector(state => state.blogs);\n  console.log(bloggies, 'is bloggies');\n\n  //const nomen = User.findById(id)\n  //or useSelector for state.userInfo where id matches useparams id\n\n  useEffect(() => {\n    const getDataWrapper = async () => {\n      const response = await gravService.getImage(id);\n      console.log(response, 'is img in userblogs');\n      setUserImg(response);\n    };\n    getDataWrapper();\n  }, []);\n  if (bloggies.length > 0) {\n    //find user that has same id as id\n    //save that user info to nomen\n\n    var nomen = '';\n    var nomenUse = '';\n    const posterBlogs = [];\n    const blogObj = {\n      title: '',\n      id: ''\n    };\n\n    //put blogs the user has posted into array\n    for (let j = 0; j < bloggies.length; j++) {\n      //if the user of the blog isn't null\n      if (bloggies[j].user) {\n        //console.log(bloggies[j].user, 'is bloggies j user when making sure it isn not null')\n        //if the id of the blog poster is the same as the id from saved user\n        if (bloggies[j].user.id === id) {\n          //console.log(bloggies[j].user, 'is bloggies j user when the user id equals id from params')\n          nomen = bloggies[j].user.personName;\n          nomenUse = bloggies[j].user.username;\n          const newBlogEntry = Object.create(blogObj);\n          newBlogEntry.title = bloggies[j].title;\n          newBlogEntry.id = bloggies[j].id;\n          posterBlogs.push(newBlogEntry);\n        }\n      }\n    }\n\n    //console.log(posterBlogs, 'is poster blogs')\n    //const phrases = anecdotes.find((words) => words.id=== Number(id))\n    //if do this don't think i can get nomen so not going to\n    //could do above for posterBlogs\n    //will decide later\n    //doesn't work if the user has posted zero blogs\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: textStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: marginStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }, this), \" \", nomen, \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: smallerTextStyle,\n          children: [\"aka \", nomenUse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: hrStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: marginStyle,\n        children: [\"About \", nomen]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: hrStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), posterBlogs.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: marginStyle,\n        children: [nomen, \" has not posted a blog yet!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 38\n      }, this), posterBlogs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: marginStyle,\n          children: [\"Here is the list of blogs \", nomen, \" has posted:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), posterBlogs.map((posting, ind) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: marginStyle1,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/blogs/${posting.id}`,\n              children: posting.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              style: hrStyle1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, ind, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(UserBlogs, \"dD7rTq8mddidCvonpNSUMVdzEGU=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = UserBlogs;\nexport default UserBlogs;\nvar _c;\n$RefreshReg$(_c, \"UserBlogs\");","map":{"version":3,"names":["Spinner","useParams","Link","useSelector","gravService","useState","useEffect","jsxDEV","_jsxDEV","textStyle","fontFamily","smallerTextStyle","fontSize","marginLeft","hrStyle","color","hrStyle1","marginStyle","marginStyle1","UserBlogs","_s","id","console","log","userImg","setUserImg","bloggies","state","blogs","getDataWrapper","response","getImage","length","nomen","nomenUse","posterBlogs","blogObj","title","j","user","personName","username","newBlogEntry","Object","create","push","style","children","src","fileName","_jsxFileName","lineNumber","columnNumber","map","posting","ind","to","animation","variant","className","_c","$RefreshReg$"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/components/UserBlogs.js"],"sourcesContent":["import Spinner from 'react-bootstrap/Spinner'\nimport { useParams, Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport gravService from '../services/gravatar'\nimport { useState, useEffect } from 'react'\n\nconst textStyle = {\n  fontFamily: 'Tillana'\n}\n\nconst smallerTextStyle = {\n  fontSize: '20px',\n  marginLeft: '1%'\n}\n\nconst hrStyle = {\n  color: '#94B9F0',\n  //borderColor: '#94B9F0'\n}\n\nconst hrStyle1 = {\n  color: '#94B9F0',\n  marginLeft: '-2%'\n}\n\nconst marginStyle = {\n  marginLeft: '1%'\n}\n\nconst marginStyle1 = {\n  marginLeft: '2%'\n}\n\nconst UserBlogs = () => {\n  const id = useParams().id\n  console.log(id, 'is id in usersblogs')\n\n  const [userImg, setUserImg] = useState('')\n\n  const bloggies = useSelector(state => state.blogs)\n  console.log(bloggies, 'is bloggies')\n\n  //const nomen = User.findById(id)\n  //or useSelector for state.userInfo where id matches useparams id\n\n  useEffect(() => {\n    const getDataWrapper = async () => {\n      const response = await gravService.getImage(id)\n      console.log(response, 'is img in userblogs')\n      setUserImg(response)\n    }\n    getDataWrapper()\n  }, [])\n\n\n\n  if (bloggies.length > 0) {\n    //find user that has same id as id\n    //save that user info to nomen\n\n    var nomen = ''\n    var nomenUse = ''\n    const posterBlogs = []\n    const blogObj = {\n      title: '',\n      id: ''\n    }\n\n    //put blogs the user has posted into array\n    for (let j = 0; j < bloggies.length; j++) {\n      //if the user of the blog isn't null\n      if (bloggies[j].user){\n        //console.log(bloggies[j].user, 'is bloggies j user when making sure it isn not null')\n        //if the id of the blog poster is the same as the id from saved user\n        if (bloggies[j].user.id === id) {\n          //console.log(bloggies[j].user, 'is bloggies j user when the user id equals id from params')\n          nomen = bloggies[j].user.personName\n          nomenUse = bloggies[j].user.username\n          const newBlogEntry = Object.create(blogObj)\n          newBlogEntry.title = bloggies[j].title\n          newBlogEntry.id = bloggies[j].id\n          posterBlogs.push(newBlogEntry)\n        }\n      }\n    }\n\n    //console.log(posterBlogs, 'is poster blogs')\n    //const phrases = anecdotes.find((words) => words.id=== Number(id))\n    //if do this don't think i can get nomen so not going to\n    //could do above for posterBlogs\n    //will decide later\n    //doesn't work if the user has posted zero blogs\n\n    return (\n      <div style={textStyle}>\n        <h1 style={marginStyle}><img src={userImg}></img> {nomen} <h3 style={smallerTextStyle}>aka {nomenUse}</h3></h1>\n        <hr style={hrStyle}></hr>\n        <h3 style={marginStyle}>About {nomen}</h3>\n        <hr style={hrStyle}></hr>\n        {posterBlogs.length === 0 && <h3 style={marginStyle}>{nomen} has not posted a blog yet!</h3>}\n        {posterBlogs.length > 0 && <div>\n          <h3 style={marginStyle} >Here is the list of blogs {nomen} has posted:</h3>\n          {posterBlogs.map((posting, ind) => {\n            return (\n              <div style={marginStyle1} key={ind}>\n                <Link to={`/blogs/${posting.id}`}>{posting.title}</Link>\n                <hr style={hrStyle1}></hr>\n              </div>\n            )\n          })}\n        </div>}\n      </div>\n    )\n  }\n\n  return (\n    <Spinner animation=\"border\" variant=\"primary\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default UserBlogs"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}