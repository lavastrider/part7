{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\components\\\\BlogsList.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport Blog from './Blog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const deleteBlog = async id => {\n    const blog = blogs.find(book => book.id === id);\n    const agree = window.confirm(`Are you sure you want to delete ${blog.title}?`);\n    if (agree) {\n      await blogService.deleteEntry(blog.id);\n      //console.log('we deleted the blog inside of deleteblog in app')\n      dispatch(setNotif(`\"${blog.title}\" has successfully been deleted`, 5));\n      setUpdatedBlog(1);\n    }\n  };\n  const increaseLikes = async id => {\n    const blog = blogs.find(diary => diary.id === id);\n    console.log(blog, 'is blog');\n    console.log(blog.id, 'is blog id');\n    //console.log(blog.user, 'is blog user')\n    //console.log(blog.user.id, 'is blog user id')\n    console.log(blog.likes, 'is blog likes before update');\n    const updatedBlogInfo = {\n      likes: blog.likes + 1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    };\n    setUpdatedBlog(updatedBlogInfo.likes);\n    //console.log(updatedBlogInfo, 'is updated blog info')\n    await blogService.update(blog.id, updatedBlogInfo);\n  };\n  const diaries = useSelector(state => state.blogs);\n  console.log(diaries, 'is diaries from useSelector');\n  const mappedBlogs = blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n    blog: blog,\n    userInfo: user,\n    increaseLikes: () => increaseLikes(blog.id),\n    deleteEntry: () => deleteBlog(blog.id)\n  }, blog.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 41\n  }, this));\n  console.log(mappedBlogs, 'is mapped blogs');\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"bloglist\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"H66TN01QaW1Prydb+ArKEBv+n8s=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","Blog","App","deleteBlog","id","blog","blogs","find","book","agree","window","confirm","title","blogService","deleteEntry","dispatch","setNotif","setUpdatedBlog","increaseLikes","diary","console","log","likes","updatedBlogInfo","author","url","update","diaries","state","mappedBlogs","map","user"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/components/BlogsList.js"],"sourcesContent":["import { useSelector } from 'react-redux'\nimport Blog from './Blog'\n\nconst App = () => {\n\n  const deleteBlog = async (id) => {\n    const blog = blogs.find((book) => book.id === id)\n    const agree = window.confirm(`Are you sure you want to delete ${blog.title}?`)\n    if (agree) {\n      await blogService.deleteEntry(blog.id)\n      //console.log('we deleted the blog inside of deleteblog in app')\n      dispatch(setNotif(`\"${blog.title}\" has successfully been deleted`, 5))\n      setUpdatedBlog(1)\n    }\n  }\n\n  const increaseLikes = async (id) => {\n\n    const blog = blogs.find((diary) => diary.id === id)\n    console.log(blog, 'is blog')\n    console.log(blog.id, 'is blog id')\n    //console.log(blog.user, 'is blog user')\n    //console.log(blog.user.id, 'is blog user id')\n    console.log(blog.likes, 'is blog likes before update')\n\n    const updatedBlogInfo = {\n      likes: blog.likes+1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    }\n\n    setUpdatedBlog(updatedBlogInfo.likes)\n    //console.log(updatedBlogInfo, 'is updated blog info')\n    await blogService.update(blog.id, updatedBlogInfo)\n  }\n\n  const diaries = useSelector(state => state.blogs)\n  console.log(diaries, 'is diaries from useSelector')\n\n  const mappedBlogs = blogs.map(blog => <Blog key={blog.id} blog={blog} userInfo={user} increaseLikes={() => increaseLikes(blog.id)} deleteEntry={() => deleteBlog(blog.id)}/>)\n  console.log(mappedBlogs, 'is mapped blogs')\n  return (\n    <p>bloglist</p>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI,MAAM,QAAQ;AAAA;AAEzB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMC,IAAI,GAAGC,KAAK,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;IACjD,MAAMK,KAAK,GAAGC,MAAM,CAACC,OAAO,CAAE,mCAAkCN,IAAI,CAACO,KAAM,GAAE,CAAC;IAC9E,IAAIH,KAAK,EAAE;MACT,MAAMI,WAAW,CAACC,WAAW,CAACT,IAAI,CAACD,EAAE,CAAC;MACtC;MACAW,QAAQ,CAACC,QAAQ,CAAE,IAAGX,IAAI,CAACO,KAAM,iCAAgC,EAAE,CAAC,CAAC,CAAC;MACtEK,cAAc,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;EAED,MAAMC,aAAa,GAAG,MAAOd,EAAE,IAAK;IAElC,MAAMC,IAAI,GAAGC,KAAK,CAACC,IAAI,CAAEY,KAAK,IAAKA,KAAK,CAACf,EAAE,KAAKA,EAAE,CAAC;IACnDgB,OAAO,CAACC,GAAG,CAAChB,IAAI,EAAE,SAAS,CAAC;IAC5Be,OAAO,CAACC,GAAG,CAAChB,IAAI,CAACD,EAAE,EAAE,YAAY,CAAC;IAClC;IACA;IACAgB,OAAO,CAACC,GAAG,CAAChB,IAAI,CAACiB,KAAK,EAAE,6BAA6B,CAAC;IAEtD,MAAMC,eAAe,GAAG;MACtBD,KAAK,EAAEjB,IAAI,CAACiB,KAAK,GAAC,CAAC;MACnBE,MAAM,EAAEnB,IAAI,CAACmB,MAAM;MACnBZ,KAAK,EAAEP,IAAI,CAACO,KAAK;MACjBa,GAAG,EAAEpB,IAAI,CAACoB;IACZ,CAAC;IAEDR,cAAc,CAACM,eAAe,CAACD,KAAK,CAAC;IACrC;IACA,MAAMT,WAAW,CAACa,MAAM,CAACrB,IAAI,CAACD,EAAE,EAAEmB,eAAe,CAAC;EACpD,CAAC;EAED,MAAMI,OAAO,GAAG3B,WAAW,CAAC4B,KAAK,IAAIA,KAAK,CAACtB,KAAK,CAAC;EACjDc,OAAO,CAACC,GAAG,CAACM,OAAO,EAAE,6BAA6B,CAAC;EAEnD,MAAME,WAAW,GAAGvB,KAAK,CAACwB,GAAG,CAACzB,IAAI,iBAAI,QAAC,IAAI;IAAe,IAAI,EAAEA,IAAK;IAAC,QAAQ,EAAE0B,IAAK;IAAC,aAAa,EAAE,MAAMb,aAAa,CAACb,IAAI,CAACD,EAAE,CAAE;IAAC,WAAW,EAAE,MAAMD,UAAU,CAACE,IAAI,CAACD,EAAE;EAAE,GAAzHC,IAAI,CAACD,EAAE;IAAA;IAAA;IAAA;EAAA,QAAoH,CAAC;EAC7KgB,OAAO,CAACC,GAAG,CAACQ,WAAW,EAAE,iBAAiB,CAAC;EAC3C,oBACE;IAAA,UAAG;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAI;AAEnB,CAAC;AAAA,GA1CK3B,GAAG;EAAA,QAkCSF,WAAW;AAAA;AAAA,KAlCvBE,GAAG;AA4CT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}