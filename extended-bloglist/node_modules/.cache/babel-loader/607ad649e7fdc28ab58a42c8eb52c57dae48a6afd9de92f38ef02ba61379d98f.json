{"ast":null,"code":"import { createSlice } from 'react-redux';\nimport blogService from '../services/blogs';\nimport { setNotif } from './notifReducer';\nconst initialState = null;\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    saveUser(state, action) {\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in save user');\n      console.log(action, 'is action in save user');\n      return 'poop';\n    },\n    setToken(state, action) {\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in set token');\n      console.log(action, 'is action in set token');\n      return 'peep';\n    }\n  }\n});\nexport const {\n  saveUser\n} = userSlice.actions;\nexport const userData = user => {\n  //will use save user reducer\n  console.log(user, 'is user in userdata');\n  return async dispatch => {\n    const userInfo = await blogService.getAll();\n    dispatch(saveUser(userInfo));\n  };\n};\nexport const userToken = user => {\n  return async dispatch => {\n    const useToke = await blogService.setToken(user.token);\n    dispatch(setToken(useToke));\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","blogService","setNotif","initialState","userSlice","name","reducers","saveUser","state","action","console","log","JSON","parse","stringify","setToken","actions","userData","user","dispatch","userInfo","getAll","userToken","useToke","token","reducer"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/reducers/userReducer.js"],"sourcesContent":["import { createSlice } from 'react-redux'\nimport blogService from '../services/blogs'\nimport { setNotif } from './notifReducer'\n\nconst initialState = null\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    saveUser(state, action) {\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in save user')\n      console.log(action, 'is action in save user')\n      return 'poop'\n    },\n    setToken(state, action) {\n      console.log(JSON.parse(JSON.stringify(state)), 'is json json state in set token')\n      console.log(action, 'is action in set token')\n      return 'peep'\n    }\n  }\n})\n\nexport const { saveUser } = userSlice.actions\n\nexport const userData = (user) => {\n  //will use save user reducer\n  console.log(user, 'is user in userdata')\n  return async dispatch => {\n    const userInfo = await blogService.getAll()\n    dispatch(saveUser(userInfo))\n  }\n}\n\nexport const userToken = (user) => {\n\n  return async dispatch => {\n    const useToke = await blogService.setToken(user.token)\n    dispatch(setToken(useToke))\n  }\n}\n\nexport default userSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,MAAMC,YAAY,GAAG,IAAI;AAEzB,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZF,YAAY;EACZG,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,KAAK,CAAC,CAAC,EAAE,iCAAiC,CAAC;MACjFE,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,wBAAwB,CAAC;MAC7C,OAAO,MAAM;IACf,CAAC;IACDM,QAAQ,CAACP,KAAK,EAAEC,MAAM,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,KAAK,CAAC,CAAC,EAAE,iCAAiC,CAAC;MACjFE,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,wBAAwB,CAAC;MAC7C,OAAO,MAAM;IACf;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF;AAAS,CAAC,GAAGH,SAAS,CAACY,OAAO;AAE7C,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAChC;EACAR,OAAO,CAACC,GAAG,CAACO,IAAI,EAAE,qBAAqB,CAAC;EACxC,OAAO,MAAMC,QAAQ,IAAI;IACvB,MAAMC,QAAQ,GAAG,MAAMnB,WAAW,CAACoB,MAAM,EAAE;IAC3CF,QAAQ,CAACZ,QAAQ,CAACa,QAAQ,CAAC,CAAC;EAC9B,CAAC;AACH,CAAC;AAED,OAAO,MAAME,SAAS,GAAIJ,IAAI,IAAK;EAEjC,OAAO,MAAMC,QAAQ,IAAI;IACvB,MAAMI,OAAO,GAAG,MAAMtB,WAAW,CAACc,QAAQ,CAACG,IAAI,CAACM,KAAK,CAAC;IACtDL,QAAQ,CAACJ,QAAQ,CAACQ,OAAO,CAAC,CAAC;EAC7B,CAAC;AACH,CAAC;AAED,eAAenB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}