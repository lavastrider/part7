{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`;\n};\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\nconst update = (id, newObject) => {\n  console.log(id, 'is id in update');\n  console.log(newObject, 'is new object in update');\n  const request = axios.put(`${baseUrl}/${id}`, newObject).catch(() => console.log('we have an error'));\n  console.log('we are in the update in service');\n  console.log(request, 'is request in service');\n  return request.then(response => response.data);\n};\nconst deleteEntry = id => {\n  console.log('we are in the delete entry');\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  axios.delete(`${baseUrl}/${id}`, config);\n  console.log('we deleted the entry');\n};\nexport default {\n  getAll,\n  create,\n  update,\n  deleteEntry,\n  setToken\n};","map":{"version":3,"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","post","update","id","console","log","put","catch","deleteEntry","delete"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/services/blogs.js"],"sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  console.log(id, 'is id in update')\n  console.log(newObject, 'is new object in update')\n  const request = axios.put(`${baseUrl}/${id}`, newObject).catch(() => console.log('we have an error'))\n  console.log('we are in the update in service')\n  console.log(request, 'is request in service')\n  return request.then((response) => response.data)\n}\n\nconst deleteEntry = (id) => {\n  console.log('we are in the delete entry')\n  const config = {\n    headers: { Authorization: token }\n  }\n  axios.delete(`${baseUrl}/${id}`, config)\n  console.log('we deleted the entry')\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  deleteEntry,\n  setToken\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,YAAY;AAE5B,IAAIC,KAAK,GAAG,IAAI;AAEhB,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;EAC3BF,KAAK,GAAI,UAASE,QAAS,EAAC;AAC9B,CAAC;AAED,MAAMC,MAAM,GAAG,MAAM;EACnB,MAAMC,OAAO,GAAGN,KAAK,CAACO,GAAG,CAACN,OAAO,CAAC;EAClC,OAAOK,OAAO,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;AAChD,CAAC;AAED,MAAMC,MAAM,GAAG,MAAMC,SAAS,IAAI;EAChC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEb;IAAM;EAClC,CAAC;EAED,MAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAI,CAACf,OAAO,EAAEW,SAAS,EAAEC,MAAM,CAAC;EAC7D,OAAOJ,QAAQ,CAACC,IAAI;AACtB,CAAC;AAED,MAAMO,MAAM,GAAG,CAACC,EAAE,EAAEN,SAAS,KAAK;EAChCO,OAAO,CAACC,GAAG,CAACF,EAAE,EAAE,iBAAiB,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACR,SAAS,EAAE,yBAAyB,CAAC;EACjD,MAAMN,OAAO,GAAGN,KAAK,CAACqB,GAAG,CAAE,GAAEpB,OAAQ,IAAGiB,EAAG,EAAC,EAAEN,SAAS,CAAC,CAACU,KAAK,CAAC,MAAMH,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAAC;EACrGD,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAC9CD,OAAO,CAACC,GAAG,CAACd,OAAO,EAAE,uBAAuB,CAAC;EAC7C,OAAOA,OAAO,CAACE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AAClD,CAAC;AAED,MAAMa,WAAW,GAAIL,EAAE,IAAK;EAC1BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EACzC,MAAMP,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEb;IAAM;EAClC,CAAC;EACDF,KAAK,CAACwB,MAAM,CAAE,GAAEvB,OAAQ,IAAGiB,EAAG,EAAC,EAAEL,MAAM,CAAC;EACxCM,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;AACrC,CAAC;AAED,eAAe;EACbf,MAAM;EACNM,MAAM;EACNM,MAAM;EACNM,WAAW;EACXpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}