{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\n//import { useSelector, useDispatch } from 'react-redux'\nimport { useDispatch } from 'react-redux';\n//import Blog from './components/Blog'\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm';\nimport Togglable from './components/Togglable';\nimport BlogForm from './components/BlogForm';\nimport BlogsList from './components/BlogsList';\nimport { initializeBlogs, newBlogs } from './reducers/blogReducer';\nimport { setNotif } from './reducers/notifReducer';\n//import { userData, userToken } from './reducers/userReducer'\nimport { userData } from './reducers/userReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const dispatch = useDispatch();\n  const blogFormRef = useRef();\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n  useEffect(() => {\n    //here is where we do login stuff\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n    //console.log(loggedUserJSON, 'is logged user')\n    if (loggedUserJSON) {\n      //will not create user since bloglist needs user\n      const usered = JSON.parse(loggedUserJSON);\n      dispatch(userData(usered));\n      setUser(usered);\n      //console.log(user, 'is user in useeffect')\n      //dispatch(userToken(user))\n      blogService.setToken(usered.token);\n    }\n  }, []);\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      //dispatch(userToken(user))\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(setNotif('Error: Wrong username or password', 5));\n    }\n  };\n  const addBlog = blogObject => {\n    blogFormRef.current.toggleVisib();\n    dispatch(newBlogs(blogObject));\n    dispatch(setNotif(`The blog post \"${blogObject.title}\" by ${blogObject.author} has been added`, 5));\n  };\n  const loginForm = () => {\n    return /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"login\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username,\n        password: password,\n        handleUsernameChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        },\n        handlePasswordChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        },\n        handleSubmit: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  };\n  const logOut = () => {\n    try {\n      window.localStorage.removeItem('loggedBlogAppUser');\n      if (!window.localStorage.getItem('loggedBlogAppUser')) {\n        window.location.reload(true);\n      }\n    } catch (exception) {\n      console.log('we have an error');\n    }\n  };\n\n  //mappedBlogs.sort((a,b) => b.props.blog.likes-a.props.blog.likes)\n  //console.log(mappedBlogs)\n  //console.log(mappedBlogs[0], 'is mapped blogs zero')\n  //console.log(mappedBlogs[0].props, 'is mapped blogs zero props')\n  //console.log(mappedBlogs[0].props.blog, 'is mapped blogs zero props blog')\n  //console.log(mappedBlogs[0].props.blog.likes, 'is mapped blogs zero props blog likes')\n\n  //console.log(blogs, 'is blogs')\n  //const sorted = [...blogs].sort((a,b) => a - b)\n  //console.log(sorted, 'is sorted')\n  //const sortVal = Object.values(blogs)\n  //console.log(sortVal, 'is sort val')\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), !user && loginForm(), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.personName, \" is logged in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logOut,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"New Blog\",\n        ref: blogFormRef,\n        children: /*#__PURE__*/_jsxDEV(BlogForm, {\n          createBlog: addBlog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Blog List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlogsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BnCaqogWukaVInuH9Cd63J0p5vU=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","useDispatch","blogService","loginService","Notification","LoginForm","Togglable","BlogForm","BlogsList","initializeBlogs","newBlogs","setNotif","userData","App","username","setUsername","password","setPassword","user","setUser","dispatch","blogFormRef","loggedUserJSON","window","localStorage","getItem","usered","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","addBlog","blogObject","current","toggleVisib","title","author","loginForm","target","value","logOut","removeItem","location","reload","console","log","personName"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\n//import { useSelector, useDispatch } from 'react-redux'\nimport { useDispatch } from 'react-redux'\n//import Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\nimport BlogsList from './components/BlogsList'\nimport { initializeBlogs, newBlogs } from './reducers/blogReducer'\nimport { setNotif } from './reducers/notifReducer'\n//import { userData, userToken } from './reducers/userReducer'\nimport { userData } from './reducers/userReducer'\n\nconst App = () => {\n  //const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const dispatch = useDispatch()\n  const blogFormRef= useRef()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    //here is where we do login stuff\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    //console.log(loggedUserJSON, 'is logged user')\n    if (loggedUserJSON) {\n      //will not create user since bloglist needs user\n      const usered = JSON.parse(loggedUserJSON)\n      dispatch(userData(usered))\n      setUser(usered)\n      //console.log(user, 'is user in useeffect')\n      //dispatch(userToken(user))\n      blogService.setToken(usered.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem( 'loggedBlogAppUser', JSON.stringify(user) )\n      blogService.setToken(user.token)\n      //dispatch(userToken(user))\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      dispatch(setNotif('Error: Wrong username or password', 5))\n    }\n  }\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisib()\n    dispatch(newBlogs(blogObject))\n    dispatch(setNotif(`The blog post \"${blogObject.title}\" by ${blogObject.author} has been added`, 5))\n  }\n\n\n  const loginForm = () => {\n    return (\n      <Togglable buttonLabel='login'>\n        <LoginForm\n          username={username}\n          password={password}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          handleSubmit={handleLogin}\n        />\n      </Togglable>\n    )\n  }\n\n  const logOut = () => {\n    try {\n      window.localStorage.removeItem('loggedBlogAppUser')\n      if (!(window.localStorage.getItem('loggedBlogAppUser'))) {\n        window.location.reload(true)\n      }\n    } catch (exception) {\n      console.log('we have an error')\n    }\n  }\n\n  //mappedBlogs.sort((a,b) => b.props.blog.likes-a.props.blog.likes)\n  //console.log(mappedBlogs)\n  //console.log(mappedBlogs[0], 'is mapped blogs zero')\n  //console.log(mappedBlogs[0].props, 'is mapped blogs zero props')\n  //console.log(mappedBlogs[0].props.blog, 'is mapped blogs zero props blog')\n  //console.log(mappedBlogs[0].props.blog.likes, 'is mapped blogs zero props blog likes')\n\n  //console.log(blogs, 'is blogs')\n  //const sorted = [...blogs].sort((a,b) => a - b)\n  //console.log(sorted, 'is sorted')\n  //const sortVal = Object.values(blogs)\n  //console.log(sortVal, 'is sort val')\n\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <Notification />\n      {!user && loginForm()}\n      {user && <div>\n        <p>{user.personName} is logged in</p>\n        <button onClick={logOut}>logout</button>\n        <Togglable buttonLabel=\"New Blog\" ref={blogFormRef}>\n          <BlogForm createBlog={addBlog}/>\n        </Togglable>\n        <h2>Blog List</h2>\n        <BlogsList />\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}