{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\components\\\\BlogsList.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setNotif } from '../reducers/notifReducer';\nimport { addingVote } from '../reducers/blogReducer';\n//import Blog from './Blog'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const blogs = useSelector(state => state.blogs);\n  console.log(blogs, 'is blogs from useSelector');\n  const dispatch = useDispatch();\n\n  //const deleteBlog = async (id) => {\n  //  const blog = blogs.find((book) => book.id === id)\n  //  const agree = window.confirm(`Are you sure you want to delete ${blog.title}?`)\n  //  if (agree) {\n  //    await blogService.deleteEntry(blog.id)\n  //    //console.log('we deleted the blog inside of deleteblog in app')\n  //    dispatch(setNotif(`\"${blog.title}\" has successfully been deleted`, 5))\n  //    setUpdatedBlog(1)\n  // }\n  //}\n\n  const increaseLikes = async id => {\n    const blog = blogs.find(diary => diary.id === id);\n    console.log(blog, 'is blog');\n    //console.log(blog.id, 'is blog id')\n    //console.log(blog.user, 'is blog user')\n    //console.log(blog.user.id, 'is blog user id')\n    console.log(blog.likes, 'is blog likes before update');\n    const updatedBlogInfo = {\n      likes: blog.likes + 1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    };\n    console.log(updatedBlogInfo, 'is updated blog info');\n    dispatch(addingVote(id, updatedBlogInfo));\n    dispatch(setNotif(`You added a like to \"${blog.title}\"`, 5));\n  };\n\n  //const mappedBlogs = blogs.map(blog => <Blog key={blog.id} blog={blog} userInfo={user} increaseLikes={() => increaseLikes(blog.id)} deleteEntry={() => deleteBlog(blog.id)}/>)\n  //const mappedBlogs = blogs.map(blog => <Blog key={blog.id} blog={blog}/>)\n  //const mappedBlogs = blogs.map((blog) => blog.id)\n  //console.log(mappedBlogs, 'is mapped blogs')\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"has \", blog.likes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => increaseLikes(blog.id),\n          children: \"like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FoYN3aDe23BOF39hV6qY5zJslRk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","setNotif","addingVote","App","blogs","state","console","log","dispatch","increaseLikes","id","blog","find","diary","likes","updatedBlogInfo","author","title","url","map"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/components/BlogsList.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\nimport { setNotif } from '../reducers/notifReducer'\nimport { addingVote } from '../reducers/blogReducer'\n//import Blog from './Blog'\n\nconst App = () => {\n\n  const blogs = useSelector(state => state.blogs)\n  console.log(blogs, 'is blogs from useSelector')\n\n  const dispatch = useDispatch()\n\n  //const deleteBlog = async (id) => {\n  //  const blog = blogs.find((book) => book.id === id)\n  //  const agree = window.confirm(`Are you sure you want to delete ${blog.title}?`)\n  //  if (agree) {\n  //    await blogService.deleteEntry(blog.id)\n  //    //console.log('we deleted the blog inside of deleteblog in app')\n  //    dispatch(setNotif(`\"${blog.title}\" has successfully been deleted`, 5))\n  //    setUpdatedBlog(1)\n  // }\n  //}\n\n  const increaseLikes = async (id) => {\n    const blog = blogs.find((diary) => diary.id === id)\n    console.log(blog, 'is blog')\n    //console.log(blog.id, 'is blog id')\n    //console.log(blog.user, 'is blog user')\n    //console.log(blog.user.id, 'is blog user id')\n    console.log(blog.likes, 'is blog likes before update')\n\n    const updatedBlogInfo = {\n      likes: blog.likes+1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    }\n\n    console.log(updatedBlogInfo, 'is updated blog info')\n    dispatch(addingVote(id, updatedBlogInfo))\n    dispatch(setNotif(`You added a like to \"${blog.title}\"`, 5))\n  }\n\n  //const mappedBlogs = blogs.map(blog => <Blog key={blog.id} blog={blog} userInfo={user} increaseLikes={() => increaseLikes(blog.id)} deleteEntry={() => deleteBlog(blog.id)}/>)\n  //const mappedBlogs = blogs.map(blog => <Blog key={blog.id} blog={blog}/>)\n  //const mappedBlogs = blogs.map((blog) => blog.id)\n  //console.log(mappedBlogs, 'is mapped blogs')\n  return (\n    <div>\n      {blogs.map((blog) =>\n        <div key={blog.id}>\n          <div>\n            {blog.title}\n          </div>\n          <div>\n            has {blog.likes}\n            <button onClick={() => increaseLikes(blog.id)}>like</button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,UAAU,QAAQ,yBAAyB;AACpD;AAAA;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAMC,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAC/CE,OAAO,CAACC,GAAG,CAACH,KAAK,EAAE,2BAA2B,CAAC;EAE/C,MAAMI,QAAQ,GAAGR,WAAW,EAAE;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMS,aAAa,GAAG,MAAOC,EAAE,IAAK;IAClC,MAAMC,IAAI,GAAGP,KAAK,CAACQ,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACH,EAAE,KAAKA,EAAE,CAAC;IACnDJ,OAAO,CAACC,GAAG,CAACI,IAAI,EAAE,SAAS,CAAC;IAC5B;IACA;IACA;IACAL,OAAO,CAACC,GAAG,CAACI,IAAI,CAACG,KAAK,EAAE,6BAA6B,CAAC;IAEtD,MAAMC,eAAe,GAAG;MACtBD,KAAK,EAAEH,IAAI,CAACG,KAAK,GAAC,CAAC;MACnBE,MAAM,EAAEL,IAAI,CAACK,MAAM;MACnBC,KAAK,EAAEN,IAAI,CAACM,KAAK;MACjBC,GAAG,EAAEP,IAAI,CAACO;IACZ,CAAC;IAEDZ,OAAO,CAACC,GAAG,CAACQ,eAAe,EAAE,sBAAsB,CAAC;IACpDP,QAAQ,CAACN,UAAU,CAACQ,EAAE,EAAEK,eAAe,CAAC,CAAC;IACzCP,QAAQ,CAACP,QAAQ,CAAE,wBAAuBU,IAAI,CAACM,KAAM,GAAE,EAAE,CAAC,CAAC,CAAC;EAC9D,CAAC;;EAED;EACA;EACA;EACA;EACA,oBACE;IAAA,UACGb,KAAK,CAACe,GAAG,CAAER,IAAI,iBACd;MAAA,wBACE;QAAA,UACGA,IAAI,CAACM;MAAK;QAAA;QAAA;QAAA;MAAA,QACP,eACN;QAAA,WAAK,MACC,EAACN,IAAI,CAACG,KAAK,eACf;UAAQ,OAAO,EAAE,MAAML,aAAa,CAACE,IAAI,CAACD,EAAE,CAAE;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACxD;IAAA,GAPEC,IAAI,CAACD,EAAE;MAAA;MAAA;MAAA;IAAA,QAQX;EACP;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAA,GAzDKP,GAAG;EAAA,QAEOJ,WAAW,EAGRC,WAAW;AAAA;AAAA,KALxBG,GAAG;AA2DT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}