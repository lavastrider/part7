{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{createSlice}from'@reduxjs/toolkit';var notifSlice=createSlice({name:'notify',initialState:'',reducers:{notifHide:function notifHide(state,action){//console.log('we are in notifHide')\nconsole.log(action,'is action in notifhide');console.log(JSON.parse(JSON.stringify(state)),'is state in notifhide');return null;},notifDisplay:function notifDisplay(state,action){//console.log('we are in notifDisplay')\n//console.log(action, 'is action in notifdisplay')\nreturn action.payload;}}});var _notifSlice$actions=notifSlice.actions,notifHide=_notifSlice$actions.notifHide,notifDisplay=_notifSlice$actions.notifDisplay;export{notifHide,notifDisplay};export var setNotif=function setNotif(displaying,timer){//console.log(displaying, 'is displaying in setNotif')\n//console.log(timer, 'is timer in setnotif')\nvar timerMil=timer*1000;return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:dispatch(notifDisplay(displaying));setTimeout(function(){return dispatch(notifHide(timerMil));},timerMil);case 2:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export default notifSlice.reducer;","map":{"version":3,"names":["createSlice","notifSlice","name","initialState","reducers","notifHide","state","action","console","log","JSON","parse","stringify","notifDisplay","payload","actions","setNotif","displaying","timer","timerMil","dispatch","setTimeout","reducer"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/reducers/notifReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst notifSlice = createSlice({\n  name: 'notify',\n  initialState: '',\n  reducers: {\n    notifHide(state, action) {\n      //console.log('we are in notifHide')\n      console.log(action, 'is action in notifhide')\n      console.log(JSON.parse(JSON.stringify(state)), 'is state in notifhide')\n      return null\n    },\n    notifDisplay(state, action){\n      //console.log('we are in notifDisplay')\n      //console.log(action, 'is action in notifdisplay')\n      return action.payload\n    }\n  }\n})\n\n\nexport const { notifHide, notifDisplay } = notifSlice.actions\n\nexport const setNotif = (displaying, timer) => {\n  //console.log(displaying, 'is displaying in setNotif')\n  //console.log(timer, 'is timer in setnotif')\n  const timerMil = timer * 1000\n  return async dispatch => {\n    dispatch(notifDisplay(displaying))\n    setTimeout(() => dispatch(notifHide(timerMil)), timerMil)\n  }\n}\n\nexport default notifSlice.reducer"],"mappings":"4SAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,GAAMC,WAAU,CAAGD,WAAW,CAAC,CAC7BE,IAAI,CAAE,QAAQ,CACdC,YAAY,CAAE,EAAE,CAChBC,QAAQ,CAAE,CACRC,SAAS,oBAACC,KAAK,CAAEC,MAAM,CAAE,CACvB;AACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAE,wBAAwB,CAAC,CAC7CC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,KAAK,CAAC,CAAC,CAAE,uBAAuB,CAAC,CACvE,MAAO,KAAI,CACb,CAAC,CACDO,YAAY,uBAACP,KAAK,CAAEC,MAAM,CAAC,CACzB;AACA;AACA,MAAOA,OAAM,CAACO,OAAO,CACvB,CACF,CACF,CAAC,CAAC,CAGK,wBAAoCb,UAAU,CAACc,OAAO,CAA9CV,SAAS,qBAATA,SAAS,CAAEQ,YAAY,qBAAZA,YAAY,CAAuB,+BAE7D,MAAO,IAAMG,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,UAAU,CAAEC,KAAK,CAAK,CAC7C;AACA;AACA,GAAMC,SAAQ,CAAGD,KAAK,CAAG,IAAI,CAC7B,iGAAO,iBAAME,QAAQ,mHACnBA,QAAQ,CAACP,YAAY,CAACI,UAAU,CAAC,CAAC,CAClCI,UAAU,CAAC,iBAAMD,SAAQ,CAACf,SAAS,CAACc,QAAQ,CAAC,CAAC,GAAEA,QAAQ,CAAC,sDAC1D,+DACH,CAAC,CAED,cAAelB,WAAU,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}