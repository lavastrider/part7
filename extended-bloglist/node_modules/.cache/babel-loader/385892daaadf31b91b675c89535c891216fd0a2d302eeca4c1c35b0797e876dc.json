{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//import { useState, useEffect, useRef } from 'react'\nimport { useEffect } from 'react';\n//import { useSelector, useDispatch } from 'react-redux'\nimport { useDispatch } from 'react-redux';\n//import loginService from './services/login'\nimport Notification from './components/Notification';\n//import LoginForm from './components/LoginForm'\n//import Togglable from './components/Togglable'\n//import BlogForm from './components/BlogForm'\nimport BlogsList from './components/BlogsList';\n//import { initializeBlogs, newBlogs } from './reducers/blogReducer'\nimport { initializeBlogs } from './reducers/blogReducer';\n//import { setNotif } from './reducers/notifReducer'\nimport { userData, userToken } from './reducers/userReducer';\n//import {\n//  BrowserRouter as Router,\n//  Routes, Route, Link, useParams,\n//  useNavigate\n//} from 'react-router-dom'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"popo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Users;\nconst App = () => {\n  _s();\n  //const [username, setUsername] = useState('')\n  //const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch();\n  //const blogFormRef= useRef()\n\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n  useEffect(() => {\n    //here is where we do login stuff\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n    //console.log(loggedUserJSON, 'is logged user')\n    if (loggedUserJSON) {\n      const usered = JSON.parse(loggedUserJSON);\n      dispatch(userData(usered));\n      //console.log(user, 'is user in useeffect')\n      dispatch(userToken(usered));\n    }\n  }, []);\n\n  //const handleLogin = async (event) => {\n  //  event.preventDefault()\n\n  //  try {\n  //    const usering = await loginService.login({ username, password })\n  //    window.localStorage.setItem( 'loggedBlogAppUser', JSON.stringify(usering) )\n  //    dispatch(userData(usering))\n  //    dispatch(userToken(user))\n  //    setUsername('')\n  //    setPassword('')\n  //  } catch (exception) {\n  //    dispatch(setNotif('Error: Wrong username or password', 5))\n  //  }\n  //}\n\n  //const addBlog = (blogObject) => {\n  //  blogFormRef.current.toggleVisib()\n  //  dispatch(newBlogs(blogObject))\n  //  dispatch(setNotif(`The blog post \"${blogObject.title}\" by ${blogObject.author} has been added`, 5))\n  //}\n\n  //const loginForm = () => {\n  //  return (\n  //    <Togglable buttonLabel='login'>\n  //      <LoginForm\n  //        username={username}\n  //        password={password}\n  //        handleUsernameChange={({ target }) => setUsername(target.value)}\n  //        handlePasswordChange={({ target }) => setPassword(target.value)}\n  //        handleSubmit={handleLogin}\n  //      />\n  //    </Togglable>\n  //  )\n  //}\n\n  //const logOut = () => {\n  //  try {\n  //    window.localStorage.removeItem('loggedBlogAppUser')\n  //    if (!(window.localStorage.getItem('loggedBlogAppUser'))) {\n  //      window.location.reload(true)\n  //    }\n  //  } catch (exception) {\n  //    console.log('we have an error')\n  //  }\n  //}\n\n  //mappedBlogs.sort((a,b) => b.props.blog.likes-a.props.blog.likes)\n  //console.log(mappedBlogs)\n  //console.log(mappedBlogs[0], 'is mapped blogs zero')\n  //console.log(mappedBlogs[0].props, 'is mapped blogs zero props')\n  //console.log(mappedBlogs[0].props.blog, 'is mapped blogs zero props blog')\n  //console.log(mappedBlogs[0].props.blog.likes, 'is mapped blogs zero props blog likes')\n\n  //console.log(blogs, 'is blogs')\n  //const sorted = [...blogs].sort((a,b) => a - b)\n  //console.log(sorted, 'is sorted')\n  //const sortVal = Object.values(blogs)\n  //console.log(sortVal, 'is sort val')\n\n  //const user = useSelector(state => state.userInfo)\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users\",\n          element: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/blogs\",\n          element: BlogsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AgIJcfH1H12KzRN1QiO1ExB/+eo=\", false, function () {\n  return [useDispatch];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Users\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useDispatch","Notification","BlogsList","initializeBlogs","userData","userToken","BrowserRouter","Router","Routes","Route","Users","App","dispatch","loggedUserJSON","window","localStorage","getItem","usered","JSON","parse"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/App.js"],"sourcesContent":["//import { useState, useEffect, useRef } from 'react'\nimport { useEffect } from 'react'\n//import { useSelector, useDispatch } from 'react-redux'\nimport { useDispatch } from 'react-redux'\n//import loginService from './services/login'\nimport Notification from './components/Notification'\n//import LoginForm from './components/LoginForm'\n//import Togglable from './components/Togglable'\n//import BlogForm from './components/BlogForm'\nimport BlogsList from './components/BlogsList'\n//import { initializeBlogs, newBlogs } from './reducers/blogReducer'\nimport { initializeBlogs } from './reducers/blogReducer'\n//import { setNotif } from './reducers/notifReducer'\nimport { userData, userToken } from './reducers/userReducer'\n//import {\n//  BrowserRouter as Router,\n//  Routes, Route, Link, useParams,\n//  useNavigate\n//} from 'react-router-dom'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\n\nconst Users = () => {\n  return(\n    <p>popo</p>\n  )\n}\n\nconst App = () => {\n  //const [username, setUsername] = useState('')\n  //const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n  //const blogFormRef= useRef()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    //here is where we do login stuff\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    //console.log(loggedUserJSON, 'is logged user')\n    if (loggedUserJSON) {\n      const usered = JSON.parse(loggedUserJSON)\n      dispatch(userData(usered))\n      //console.log(user, 'is user in useeffect')\n      dispatch(userToken(usered))\n    }\n  }, [])\n\n  //const handleLogin = async (event) => {\n  //  event.preventDefault()\n\n  //  try {\n  //    const usering = await loginService.login({ username, password })\n  //    window.localStorage.setItem( 'loggedBlogAppUser', JSON.stringify(usering) )\n  //    dispatch(userData(usering))\n  //    dispatch(userToken(user))\n  //    setUsername('')\n  //    setPassword('')\n  //  } catch (exception) {\n  //    dispatch(setNotif('Error: Wrong username or password', 5))\n  //  }\n  //}\n\n  //const addBlog = (blogObject) => {\n  //  blogFormRef.current.toggleVisib()\n  //  dispatch(newBlogs(blogObject))\n  //  dispatch(setNotif(`The blog post \"${blogObject.title}\" by ${blogObject.author} has been added`, 5))\n  //}\n\n\n  //const loginForm = () => {\n  //  return (\n  //    <Togglable buttonLabel='login'>\n  //      <LoginForm\n  //        username={username}\n  //        password={password}\n  //        handleUsernameChange={({ target }) => setUsername(target.value)}\n  //        handlePasswordChange={({ target }) => setPassword(target.value)}\n  //        handleSubmit={handleLogin}\n  //      />\n  //    </Togglable>\n  //  )\n  //}\n\n  //const logOut = () => {\n  //  try {\n  //    window.localStorage.removeItem('loggedBlogAppUser')\n  //    if (!(window.localStorage.getItem('loggedBlogAppUser'))) {\n  //      window.location.reload(true)\n  //    }\n  //  } catch (exception) {\n  //    console.log('we have an error')\n  //  }\n  //}\n\n  //mappedBlogs.sort((a,b) => b.props.blog.likes-a.props.blog.likes)\n  //console.log(mappedBlogs)\n  //console.log(mappedBlogs[0], 'is mapped blogs zero')\n  //console.log(mappedBlogs[0].props, 'is mapped blogs zero props')\n  //console.log(mappedBlogs[0].props.blog, 'is mapped blogs zero props blog')\n  //console.log(mappedBlogs[0].props.blog.likes, 'is mapped blogs zero props blog likes')\n\n  //console.log(blogs, 'is blogs')\n  //const sorted = [...blogs].sort((a,b) => a - b)\n  //console.log(sorted, 'is sorted')\n  //const sortVal = Object.values(blogs)\n  //console.log(sortVal, 'is sort val')\n\n  //const user = useSelector(state => state.userInfo)\n\n\n  return (\n    <Router>\n      <div>\n        <h2>Blogs</h2>\n        <Notification />\n\n        <Routes>\n          <Route path=\"/users\" element={<Users />} />\n          <Route path=\"/blogs\" element={BlogsList} />\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n\nexport default App"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA,SAASC,WAAW,QAAQ,aAAa;AACzC;AACA,OAAOC,YAAY,MAAM,2BAA2B;AACpD;AACA;AACA;AACA,OAAOC,SAAS,MAAM,wBAAwB;AAC9C;AACA,SAASC,eAAe,QAAQ,wBAAwB;AACxD;AACA,SAASC,QAAQ,EAAEC,SAAS,QAAQ,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAA;AAEzE,MAAMC,KAAK,GAAG,MAAM;EAClB,oBACE;IAAA,UAAG;EAAI;IAAA;IAAA;IAAA;EAAA,QAAI;AAEf,CAAC;AAAA,KAJKA,KAAK;AAMX,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;EACA;;EAEA,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAC9B;;EAEAD,SAAS,CAAC,MAAM;IACda,QAAQ,CAACT,eAAe,EAAE,CAAC;EAC7B,CAAC,EAAE,CAACS,QAAQ,CAAC,CAAC;EAEdb,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,cAAc,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;IACvE;IACA,IAAIH,cAAc,EAAE;MAClB,MAAMI,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACN,cAAc,CAAC;MACzCD,QAAQ,CAACR,QAAQ,CAACa,MAAM,CAAC,CAAC;MAC1B;MACAL,QAAQ,CAACP,SAAS,CAACY,MAAM,CAAC,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAGA,oBACE,QAAC,MAAM;IAAA,uBACL;MAAA,wBACE;QAAA,UAAI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACd,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eAEhB,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,eAAE,QAAC,KAAK;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3C,QAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAEf;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACpC;IAAA;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACC;AAEb,CAAC;AAAA,GAnGKS,GAAG;EAAA,QAIUX,WAAW;AAAA;AAAA,MAJxBW,GAAG;AAqGT,eAAeA,GAAG;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}