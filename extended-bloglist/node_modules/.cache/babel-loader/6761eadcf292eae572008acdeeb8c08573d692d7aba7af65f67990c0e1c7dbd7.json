{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport commentService from '../services/comments';\nimport { setNotif } from './notifReducer';\nconst initialState = [];\nconst commSlice = createSlice({\n  name: 'quips',\n  initialState,\n  reducers: {\n    appendComments(state, action) {\n      console.log(action, 'is action in append comments in comment reducer');\n      return state.concat(action.payload);\n    },\n    addVote(state, action) {\n      console.log(action, 'is action in addVote reducer');\n      const id = action.payload.id;\n      console.log(id, 'is id in add vote');\n      const phraseToReplace = state.find(word => word.id === id);\n      console.log(JSON.parse(JSON.stringify(phraseToReplace)), 'is json json phrasetoreplace in add vote reducer');\n      console.log(phraseToReplace.likes, 'is pTR likes in add vote');\n      phraseToReplace.likes = action.payload.likes + 1;\n      console.log(phraseToReplace.likes, 'is pTR likes in add vote after made the same as action payload likes');\n    },\n    removeBlog(state, action) {\n      //console.log(action, 'is action in removeblog')\n      const id = action.payload;\n      const blogWithoutDeleted = state.filter(diary => diary.id !== id);\n      return blogWithoutDeleted;\n    }\n  }\n});\nexport const {\n  addVote,\n  appendComments,\n  removeBlog\n} = commSlice.actions;\nexport const initializeComms = id => {\n  return async dispatch => {\n    const lequip = await commentService.getAll(id);\n    dispatch(appendComments(lequip));\n  };\n};\nexport const newComment = content => {\n  return async dispatch => {\n    const newComm = await commentService.create(content).catch(() => dispatch(setNotif('There was an error when submitting your comment. Please wait a few moments and then try again.', 5)));\n    if (newComm) {\n      dispatch(appendComments(newComm));\n    }\n  };\n};\n\n//export const addingVote = (id, newObject) => {\n//  return async dispatch => {\n//    const voted = await blogService.update(id, newObject)\n//    console.log(voted, 'is voted in adding vote in reducer')\n//    dispatch(addVote(voted))\n//  }\n//}\n\n//export const removeEntry = (id) => {\n//  console.log(id, 'is id in remove entry in reducer')\n//  return async dispatch => {\n//    const deletion = await blogService.deleteEntry(id)\n//    console.log(deletion, 'is deletion in remove entry')\n//    dispatch(removeBlog(id))\n//  }\n//}\n\nexport default commSlice.reducer;","map":{"version":3,"names":["createSlice","commentService","setNotif","initialState","commSlice","name","reducers","appendComments","state","action","console","log","concat","payload","addVote","id","phraseToReplace","find","word","JSON","parse","stringify","likes","removeBlog","blogWithoutDeleted","filter","diary","actions","initializeComms","dispatch","lequip","getAll","newComment","content","newComm","create","catch","reducer"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/reducers/commentReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport commentService from '../services/comments'\nimport { setNotif } from './notifReducer'\n\nconst initialState = []\n\nconst commSlice = createSlice({\n  name: 'quips',\n  initialState,\n  reducers: {\n    appendComments(state, action){\n      console.log(action, 'is action in append comments in comment reducer')\n      return state.concat(action.payload)\n    },\n    addVote(state, action){\n      console.log(action, 'is action in addVote reducer')\n      const id = action.payload.id\n      console.log(id, 'is id in add vote')\n      const phraseToReplace = state.find((word) => word.id === id)\n      console.log(JSON.parse(JSON.stringify(phraseToReplace)), 'is json json phrasetoreplace in add vote reducer')\n      console.log(phraseToReplace.likes, 'is pTR likes in add vote')\n      phraseToReplace.likes = action.payload.likes + 1\n      console.log(phraseToReplace.likes, 'is pTR likes in add vote after made the same as action payload likes')\n    },\n    removeBlog(state, action){\n      //console.log(action, 'is action in removeblog')\n      const id = action.payload\n      const blogWithoutDeleted = state.filter((diary) => diary.id !== id)\n      return blogWithoutDeleted\n    }\n  }\n})\n\nexport const { addVote, appendComments, removeBlog } = commSlice.actions\n\nexport const initializeComms = (id) => {\n  return async dispatch => {\n    const lequip = await commentService.getAll(id)\n    dispatch(appendComments(lequip))\n  }\n}\n\nexport const newComment = (content) => {\n  return async dispatch => {\n    const newComm = await commentService.create(content).catch(() => dispatch(setNotif('There was an error when submitting your comment. Please wait a few moments and then try again.', 5)))\n    if (newComm){\n      dispatch(appendComments(newComm))\n    }\n  }\n}\n\n//export const addingVote = (id, newObject) => {\n//  return async dispatch => {\n//    const voted = await blogService.update(id, newObject)\n//    console.log(voted, 'is voted in adding vote in reducer')\n//    dispatch(addVote(voted))\n//  }\n//}\n\n//export const removeEntry = (id) => {\n//  console.log(id, 'is id in remove entry in reducer')\n//  return async dispatch => {\n//    const deletion = await blogService.deleteEntry(id)\n//    console.log(deletion, 'is deletion in remove entry')\n//    dispatch(removeBlog(id))\n//  }\n//}\n\nexport default commSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,OAAO;EACbF,YAAY;EACZG,QAAQ,EAAE;IACRC,cAAc,CAACC,KAAK,EAAEC,MAAM,EAAC;MAC3BC,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,iDAAiD,CAAC;MACtE,OAAOD,KAAK,CAACI,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC;IACrC,CAAC;IACDC,OAAO,CAACN,KAAK,EAAEC,MAAM,EAAC;MACpBC,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,8BAA8B,CAAC;MACnD,MAAMM,EAAE,GAAGN,MAAM,CAACI,OAAO,CAACE,EAAE;MAC5BL,OAAO,CAACC,GAAG,CAACI,EAAE,EAAE,mBAAmB,CAAC;MACpC,MAAMC,eAAe,GAAGR,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;MAC5DL,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,eAAe,CAAC,CAAC,EAAE,kDAAkD,CAAC;MAC5GN,OAAO,CAACC,GAAG,CAACK,eAAe,CAACM,KAAK,EAAE,0BAA0B,CAAC;MAC9DN,eAAe,CAACM,KAAK,GAAGb,MAAM,CAACI,OAAO,CAACS,KAAK,GAAG,CAAC;MAChDZ,OAAO,CAACC,GAAG,CAACK,eAAe,CAACM,KAAK,EAAE,sEAAsE,CAAC;IAC5G,CAAC;IACDC,UAAU,CAACf,KAAK,EAAEC,MAAM,EAAC;MACvB;MACA,MAAMM,EAAE,GAAGN,MAAM,CAACI,OAAO;MACzB,MAAMW,kBAAkB,GAAGhB,KAAK,CAACiB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACX,EAAE,KAAKA,EAAE,CAAC;MACnE,OAAOS,kBAAkB;IAC3B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV,OAAO;EAAEP,cAAc;EAAEgB;AAAW,CAAC,GAAGnB,SAAS,CAACuB,OAAO;AAExE,OAAO,MAAMC,eAAe,GAAIb,EAAE,IAAK;EACrC,OAAO,MAAMc,QAAQ,IAAI;IACvB,MAAMC,MAAM,GAAG,MAAM7B,cAAc,CAAC8B,MAAM,CAAChB,EAAE,CAAC;IAC9Cc,QAAQ,CAACtB,cAAc,CAACuB,MAAM,CAAC,CAAC;EAClC,CAAC;AACH,CAAC;AAED,OAAO,MAAME,UAAU,GAAIC,OAAO,IAAK;EACrC,OAAO,MAAMJ,QAAQ,IAAI;IACvB,MAAMK,OAAO,GAAG,MAAMjC,cAAc,CAACkC,MAAM,CAACF,OAAO,CAAC,CAACG,KAAK,CAAC,MAAMP,QAAQ,CAAC3B,QAAQ,CAAC,gGAAgG,EAAE,CAAC,CAAC,CAAC,CAAC;IACzL,IAAIgC,OAAO,EAAC;MACVL,QAAQ,CAACtB,cAAc,CAAC2B,OAAO,CAAC,CAAC;IACnC;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe9B,SAAS,CAACiC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}