{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`;\n};\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  console.log('we are in the update in service');\n  //console.log(request, 'is request in service')\n  return request.then(response => {\n    response.data;\n    console.log(response.data, 'is response data in request in update');\n  });\n};\nconst deleteEntry = id => {\n  console.log('we are in the delete entry');\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  axios.delete(`${baseUrl}/${id}`, config);\n  console.log('we deleted the entry');\n};\nexport default {\n  getAll,\n  create,\n  update,\n  deleteEntry,\n  setToken\n};","map":{"version":3,"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","post","update","id","put","console","log","deleteEntry","delete"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/services/blogs.js"],"sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  console.log('we are in the update in service')\n  //console.log(request, 'is request in service')\n  return request.then((response) => {response.data; console.log(response.data, 'is response data in request in update')})\n}\n\nconst deleteEntry = (id) => {\n  console.log('we are in the delete entry')\n  const config = {\n    headers: { Authorization: token }\n  }\n  axios.delete(`${baseUrl}/${id}`, config)\n  console.log('we deleted the entry')\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  deleteEntry,\n  setToken\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,YAAY;AAE5B,IAAIC,KAAK,GAAG,IAAI;AAEhB,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;EAC3BF,KAAK,GAAI,UAASE,QAAS,EAAC;AAC9B,CAAC;AAED,MAAMC,MAAM,GAAG,MAAM;EACnB,MAAMC,OAAO,GAAGN,KAAK,CAACO,GAAG,CAACN,OAAO,CAAC;EAClC,OAAOK,OAAO,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;AAChD,CAAC;AAED,MAAMC,MAAM,GAAG,MAAMC,SAAS,IAAI;EAChC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEb;IAAM;EAClC,CAAC;EAED,MAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAI,CAACf,OAAO,EAAEW,SAAS,EAAEC,MAAM,CAAC;EAC7D,OAAOJ,QAAQ,CAACC,IAAI;AACtB,CAAC;AAED,MAAMO,MAAM,GAAG,CAACC,EAAE,EAAEN,SAAS,KAAK;EAChC,MAAMN,OAAO,GAAGN,KAAK,CAACmB,GAAG,CAAE,GAAElB,OAAQ,IAAGiB,EAAG,EAAC,EAAEN,SAAS,CAAC;EACxDQ,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAC9C;EACA,OAAOf,OAAO,CAACE,IAAI,CAAEC,QAAQ,IAAK;IAACA,QAAQ,CAACC,IAAI;IAAEU,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAACC,IAAI,EAAE,uCAAuC,CAAC;EAAA,CAAC,CAAC;AACzH,CAAC;AAED,MAAMY,WAAW,GAAIJ,EAAE,IAAK;EAC1BE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EACzC,MAAMR,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEb;IAAM;EAClC,CAAC;EACDF,KAAK,CAACuB,MAAM,CAAE,GAAEtB,OAAQ,IAAGiB,EAAG,EAAC,EAAEL,MAAM,CAAC;EACxCO,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;AACrC,CAAC;AAED,eAAe;EACbhB,MAAM;EACNM,MAAM;EACNM,MAAM;EACNK,WAAW;EACXnB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}