{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part7\\\\extended-bloglist\\\\src\\\\components\\\\Users.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { initializeUsers } from '../reducers/userReducer';\nimport { Table } from 'react-bootstrap';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(initializeUsers());\n  }, []);\n  const setup = useSelector(state => state.userInfo);\n  console.log(setup, 'is setup');\n  if (setup) {\n    const bloggiesUsers = useSelector(state => state.userInfo.appendUsers);\n    //console.log(bloggiesUsers, 'is bloggies users')\n\n    if (bloggiesUsers) {\n      //console.log(bloggiesUsers.length, 'is bloggies users length')\n\n      const blogPosters = [];\n      const userInfo = {\n        poster: '',\n        posterUser: '',\n        posterId: '',\n        posted: 0\n      };\n      for (let j = 0; j < bloggiesUsers.length; j++) {\n        //if array isn't empty\n        if (blogPosters.length !== 0) {\n          const newUserInfo = Object.create(userInfo);\n          newUserInfo.poster = bloggiesUsers[j].personName;\n          newUserInfo.posterUser = bloggiesUsers[j].username;\n          newUserInfo.posterId = bloggiesUsers[j].id;\n          newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length;\n          blogPosters.push(newUserInfo);\n        } else {\n          //the array is empty\n          //if the person has a name\n          if (bloggiesUsers[j].personName) {\n            const newUserInfo = Object.create(userInfo);\n            newUserInfo.poster = bloggiesUsers[j].personName;\n            newUserInfo.posterUser = bloggiesUsers[j].username;\n            newUserInfo.posterId = bloggiesUsers[j].id;\n            newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length;\n            blogPosters.push(newUserInfo);\n          }\n        }\n      }\n\n      //console.log(blogPosters, 'is blog posters')\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"blogs created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: blogPosters.map((posting, ind) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/users/${posting.posterId}`,\n                    children: posting.poster\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: posting.posted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)]\n              }, ind, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"5gLI6NfaNPyU0ARUpwY0TXX0Sdk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["useDispatch","useSelector","Link","useEffect","initializeUsers","Table","Spinner","Users","dispatch","setup","state","userInfo","console","log","bloggiesUsers","appendUsers","blogPosters","poster","posterUser","posterId","posted","j","length","newUserInfo","Object","create","personName","username","id","values","blogs","push","map","posting","ind"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/components/Users.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { useEffect } from 'react'\nimport { initializeUsers } from '../reducers/userReducer'\nimport { Table } from 'react-bootstrap'\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst Users = () => {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [])\n\n  const setup = useSelector(state => state.userInfo)\n  console.log(setup, 'is setup')\n\n  if (setup) {\n    const bloggiesUsers = useSelector(state => state.userInfo.appendUsers)\n    //console.log(bloggiesUsers, 'is bloggies users')\n\n    if (bloggiesUsers) {\n      //console.log(bloggiesUsers.length, 'is bloggies users length')\n\n      const blogPosters = []\n      const userInfo = {\n        poster: '',\n        posterUser: '',\n        posterId: '',\n        posted: 0\n      }\n\n      for (let j = 0; j < bloggiesUsers.length; j++) {\n        //if array isn't empty\n        if (blogPosters.length !== 0) {\n          const newUserInfo = Object.create(userInfo)\n          newUserInfo.poster = bloggiesUsers[j].personName\n          newUserInfo.posterUser = bloggiesUsers[j].username\n          newUserInfo.posterId = bloggiesUsers[j].id\n          newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length\n          blogPosters.push(newUserInfo)\n        }\n        else { //the array is empty\n          //if the person has a name\n          if (bloggiesUsers[j].personName) {\n            const newUserInfo = Object.create(userInfo)\n            newUserInfo.poster = bloggiesUsers[j].personName\n            newUserInfo.posterUser = bloggiesUsers[j].username\n            newUserInfo.posterId = bloggiesUsers[j].id\n            newUserInfo.posted = Object.values(bloggiesUsers[j].blogs).length\n            blogPosters.push(newUserInfo)\n          }\n        }\n      }\n\n      //console.log(blogPosters, 'is blog posters')\n\n      return (\n        <div>\n          <h1>Users</h1>\n          <Table bordered>\n            <thead>\n              <tr>\n                <td></td>\n                <td><strong>blogs created</strong></td>\n              </tr>\n            </thead>\n            <tbody>\n              {blogPosters.map((posting, ind) => {\n                return (\n                  <tr key={ind}>\n                    <td><Link to={`/users/${posting.posterId}`}>{posting.poster}</Link></td>\n                    <td>{posting.posted}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n        </div>\n      )\n    }\n  }\n\n  return(\n    <Spinner animation=\"border\" variant=\"primary\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Users"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}