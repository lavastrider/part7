{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\react_course_part5_bloglist\\\\src\\\\components\\\\Togglable.js\",\n  _s = $RefreshSig$();\nimport { useState, forwardRef, useImperativeHandle } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Togglable = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n  const toggleVisib = () => {\n    setVisible(!visible);\n  };\n  useImperativeHandle(refs, () => {\n    return {\n      toggleVisib\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hideWhenVisible,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisib,\n        children: props.buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: showWhenVisible,\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisib,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 6\n  }, this);\n}, \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\")), \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\");\n_c2 = Togglable;\nexport default Togglable;\nvar _c, _c2;\n$RefreshReg$(_c, \"Togglable$forwardRef\");\n$RefreshReg$(_c2, \"Togglable\");","map":{"version":3,"names":["useState","forwardRef","useImperativeHandle","Togglable","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisib","refs","buttonLabel","children"],"sources":["C:/Users/bilstr/Documents/GitHub/react_course_part5_bloglist/src/components/Togglable.js"],"sourcesContent":["import {useState, forwardRef, useImperativeHandle} from 'react'\r\n\r\nconst Togglable = forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n  \r\n  const hideWhenVisible = { display : visible ? 'none' : '' }\r\n  const showWhenVisible = { display : visible ? '' : 'none' }\r\n  \r\n  const toggleVisib = () => {\r\n    setVisible(!visible)\r\n  }\r\n  \r\n  useImperativeHandle(refs, () => {\r\n    return {\r\n      toggleVisib\r\n      }\r\n  })\r\n  \r\n  return (\r\n     <div>\r\n       <div style={hideWhenVisible}>\r\n         <button onClick={toggleVisib}>{props.buttonLabel}</button>\r\n       </div>\r\n       <div style={showWhenVisible}>\r\n         {props.children}\r\n         <button onClick={toggleVisib}>cancel</button>  \r\n       </div>\r\n     </div>\r\n   )\r\n})\r\n\r\nexport default Togglable"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,UAAU,EAAEC,mBAAmB,QAAO,OAAO;AAAA;AAE/D,MAAMC,SAAS,iCAAGF,UAAU,SAAC,CAACG,KAAK,EAAEC,GAAG,KAAK;EAAA;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMQ,eAAe,GAAG;IAAEC,OAAO,EAAGH,OAAO,GAAG,MAAM,GAAG;EAAG,CAAC;EAC3D,MAAMI,eAAe,GAAG;IAAED,OAAO,EAAGH,OAAO,GAAG,EAAE,GAAG;EAAO,CAAC;EAE3D,MAAMK,WAAW,GAAG,MAAM;IACxBJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAEDJ,mBAAmB,CAACU,IAAI,EAAE,MAAM;IAC9B,OAAO;MACLD;IACA,CAAC;EACL,CAAC,CAAC;EAEF,oBACG;IAAA,wBACE;MAAK,KAAK,EAAEH,eAAgB;MAAA,uBAC1B;QAAQ,OAAO,EAAEG,WAAY;QAAA,UAAEP,KAAK,CAACS;MAAW;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QACtD,eACN;MAAK,KAAK,EAAEH,eAAgB;MAAA,WACzBN,KAAK,CAACU,QAAQ,eACf;QAAQ,OAAO,EAAEH,WAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEX,CAAC,kCAAC;AAAA,MA3BIR,SAAS;AA6Bf,eAAeA,SAAS;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}