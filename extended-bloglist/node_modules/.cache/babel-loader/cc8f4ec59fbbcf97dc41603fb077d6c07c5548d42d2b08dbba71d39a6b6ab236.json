{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/users';\nlet token = null;\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`;\n};\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  console.log(request.then(response => response.data), 'is request then response data in user service');\n  return request.then(response => response.data);\n};\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, config);\n  return response.data;\n};\nconst update = (id, newObject) => {\n  console.log(id, 'is id in update');\n  console.log(newObject, 'is new object in update');\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  console.log('we are in the update in service');\n  console.log(request, 'is request in service');\n  //console.log(request.then(response => response.data), 'is request then data')\n  return request.then(response => response.data);\n};\nconst deleteEntry = id => {\n  console.log('we are in the delete entry');\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  axios.delete(`${baseUrl}/${id}`, config);\n  console.log('we deleted the entry');\n};\nexport default {\n  getAll,\n  create,\n  update,\n  deleteEntry,\n  setToken\n};","map":{"version":3,"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","console","log","then","response","data","create","newObject","post","config","update","id","put","deleteEntry","headers","Authorization","delete"],"sources":["C:/Users/bilstr/Documents/GitHub/part7/extended-bloglist/src/services/user.js"],"sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  console.log(request.then(response => response.data), 'is request then response data in user service')\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  console.log(id, 'is id in update')\n  console.log(newObject, 'is new object in update')\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  console.log('we are in the update in service')\n  console.log(request, 'is request in service')\n  //console.log(request.then(response => response.data), 'is request then data')\n  return request.then((response) => response.data)\n}\n\nconst deleteEntry = (id) => {\n  console.log('we are in the delete entry')\n  const config = {\n    headers: { Authorization: token }\n  }\n  axios.delete(`${baseUrl}/${id}`, config)\n  console.log('we deleted the entry')\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  deleteEntry,\n  setToken\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,YAAY;AAE5B,IAAIC,KAAK,GAAG,IAAI;AAEhB,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;EAC3BF,KAAK,GAAI,UAASE,QAAS,EAAC;AAC9B,CAAC;AAED,MAAMC,MAAM,GAAG,MAAM;EACnB,MAAMC,OAAO,GAAGN,KAAK,CAACO,GAAG,CAACN,OAAO,CAAC;EAClCO,OAAO,CAACC,GAAG,CAACH,OAAO,CAACI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,EAAE,+CAA+C,CAAC;EACrG,OAAON,OAAO,CAACI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;AAChD,CAAC;AAED,MAAMC,MAAM,GAAG,MAAMC,SAAS,IAAI;EAChC,MAAMH,QAAQ,GAAG,MAAMX,KAAK,CAACe,IAAI,CAACd,OAAO,EAAEe,MAAM,CAAC;EAClD,OAAOL,QAAQ,CAACC,IAAI;AACtB,CAAC;AAED,MAAMK,MAAM,GAAG,CAACC,EAAE,EAAEJ,SAAS,KAAK;EAChCN,OAAO,CAACC,GAAG,CAACS,EAAE,EAAE,iBAAiB,CAAC;EAClCV,OAAO,CAACC,GAAG,CAACK,SAAS,EAAE,yBAAyB,CAAC;EACjD,MAAMR,OAAO,GAAGN,KAAK,CAACmB,GAAG,CAAE,GAAElB,OAAQ,IAAGiB,EAAG,EAAC,EAAEJ,SAAS,CAAC;EACxDN,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAC9CD,OAAO,CAACC,GAAG,CAACH,OAAO,EAAE,uBAAuB,CAAC;EAC7C;EACA,OAAOA,OAAO,CAACI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AAClD,CAAC;AAED,MAAMQ,WAAW,GAAIF,EAAE,IAAK;EAC1BV,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EACzC,MAAMO,MAAM,GAAG;IACbK,OAAO,EAAE;MAAEC,aAAa,EAAEpB;IAAM;EAClC,CAAC;EACDF,KAAK,CAACuB,MAAM,CAAE,GAAEtB,OAAQ,IAAGiB,EAAG,EAAC,EAAEF,MAAM,CAAC;EACxCR,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;AACrC,CAAC;AAED,eAAe;EACbJ,MAAM;EACNQ,MAAM;EACNI,MAAM;EACNG,WAAW;EACXjB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}